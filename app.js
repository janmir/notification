/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/MzY5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcclxuXHJcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXHJcbmcgPSAoZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXM7XHJcbn0pKCk7XHJcblxyXG50cnkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxyXG5cdGcgPSBnIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKSB8fCAoMSxldmFsKShcInRoaXNcIik7XHJcbn0gY2F0Y2goZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIilcclxuXHRcdGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAod2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanNcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ 4);\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzP2Q3YWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhclRpbWVvdXQpO1xufTtcbmV4cG9ydHMuc2V0SW50ZXJ2YWwgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0SW50ZXJ2YWwsIHdpbmRvdywgYXJndW1lbnRzKSwgY2xlYXJJbnRlcnZhbCk7XG59O1xuZXhwb3J0cy5jbGVhclRpbWVvdXQgPVxuZXhwb3J0cy5jbGVhckludGVydmFsID0gZnVuY3Rpb24odGltZW91dCkge1xuICBpZiAodGltZW91dCkge1xuICAgIHRpbWVvdXQuY2xvc2UoKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gVGltZW91dChpZCwgY2xlYXJGbikge1xuICB0aGlzLl9pZCA9IGlkO1xuICB0aGlzLl9jbGVhckZuID0gY2xlYXJGbjtcbn1cblRpbWVvdXQucHJvdG90eXBlLnVucmVmID0gVGltZW91dC5wcm90b3R5cGUucmVmID0gZnVuY3Rpb24oKSB7fTtcblRpbWVvdXQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2NsZWFyRm4uY2FsbCh3aW5kb3csIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVpZGF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qc1xuLy8gbW9kdWxlIGlkID0gMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _mithril = __webpack_require__(/*! ./mithril.js */ 3);\n\nvar _mithril2 = _interopRequireDefault(_mithril);\n\nvar _anime = __webpack_require__(/*! ./anime.js */ 6);\n\nvar _anime2 = _interopRequireDefault(_anime);\n\nvar _timers = __webpack_require__(/*! timers */ 1);\n\nvar _tippy = __webpack_require__(/*! tippy.js */ 7);\n\nvar _tippy2 = _interopRequireDefault(_tippy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*********************One signal initializations************************/\nvar OneSignal = window.OneSignal || [];\nOneSignal.push(function () {\n  OneSignal.init({\n    appId: \"87a38029-bda5-4a10-a4c9-697492b36d8f\",\n    autoRegister: false,\n    notifyButton: {\n      enable: true\n    },\n    welcomeNotification: {\n      \"title\": \"Notifications\",\n      \"message\": \"Thanks for subscribing!\"\n    }\n  });\n});\n\nOneSignal.push(function () {\n  // If we're on an unsupported browser, do nothing\n  if (!OneSignal.isPushNotificationsSupported()) {\n    return;\n  }\n  //updateMangeWebPushSubscriptionButton(buttonSelector);\n  //OneSignal.on(\"subscriptionChange\", function(isSubscribed) {\n  /* If the user's subscription state changes during the page's session, update the button text */\n  //updateMangeWebPushSubscriptionButton(buttonSelector);\n  //});\n});\n/*********************Functions************************/\nvar fn = {\n  onManageWebPushSubscriptionButtonClicked: function onManageWebPushSubscriptionButtonClicked(event) {\n    fn.getSubscriptionState().then(function (state) {\n      if (state.isPushEnabled) {\n        /* Subscribed, opt them out */\n        OneSignal.setSubscription(false);\n      } else {\n        if (state.isOptedOut) {\n          /* Opted out, opt them back in */\n          OneSignal.setSubscription(true);\n        } else {\n          /* Unsubscribed, subscribe them */\n          OneSignal.registerForPushNotifications();\n        }\n      }\n    });\n    event.preventDefault();\n  },\n  updateMangeWebPushSubscriptionButton: function updateMangeWebPushSubscriptionButton(buttonSelector) {\n    var hideWhenSubscribed = false;\n    var subscribeText = \"Subscribe to Notifications\";\n    var unsubscribeText = \"Unsubscribe from Notifications\";\n\n    fn.getSubscriptionState().then(function (state) {\n      var buttonText = !state.isPushEnabled || state.isOptedOut ? subscribeText : unsubscribeText;\n\n      var element = document.querySelector(buttonSelector);\n      if (element === null) {\n        return;\n      }\n\n      element.removeEventListener('click', fn.onManageWebPushSubscriptionButtonClicked);\n      element.addEventListener('click', fn.onManageWebPushSubscriptionButtonClicked);\n      element.textContent = buttonText;\n\n      if (state.hideWhenSubscribed && state.isPushEnabled) {\n        element.style.display = \"none\";\n      } else {\n        element.style.display = \"\";\n      }\n    });\n  },\n  getSubscriptionState: function getSubscriptionState() {\n    return Promise.all([OneSignal.isPushNotificationsEnabled(), OneSignal.isOptedOut()]).then(function (result) {\n      var isPushEnabled = result[0];\n      var isOptedOut = result[1];\n\n      return {\n        isPushEnabled: isPushEnabled,\n        isOptedOut: isOptedOut\n      };\n    });\n  }\n\n  /*********************Components************************/\n};var menu = {\n  about: \"This is about message\",\n  oncreate: function oncreate(vnode) {\n    (0, _tippy2.default)(\".menu_item\", {\n      trigger: 'click',\n      arrow: true,\n      arrowType: 'round',\n      animateFill: true,\n      distance: 1\n    });\n  },\n  view: function view(vnode) {\n    return (0, _mithril2.default)(\"div#menu\", [(0, _mithril2.default)(\".menu_item\", { title: menu.about }, \"About\"), (0, _mithril2.default)(\".menu_item\", \"Credits\"), (0, _mithril2.default)(\".menu_item\", \"Help?\")]\n    //m(\".menu_item\",\"with❤️by ;p\")\n    );\n  }\n};\n\nvar message = {\n  view: function view(vnode) {\n    return (0, _mithril2.default)(\"div#message\", [\"Let's get subscrib'n, Push the button meow(now)!\"]);\n  }\n};\n\nvar purr = {\n  view: function view(vnode) {\n    return (0, _mithril2.default)(\"div#purr\", [(0, _mithril2.default)(\"img\", {\n      src: \"./static/catpurr.gif\"\n    })]);\n  }\n};\n\nvar button = {\n  do: function _do() {\n    alert(\"something\");\n  },\n  view: function view(vnode) {\n    return (0, _mithril2.default)(\"div#subButton\", { onclick: button.do }, [\"Subscribe\"]);\n  }\n};\n\nvar App = {\n  view: function view(vnode) {\n    console.log(\"Redraw:\", vnode);\n\n    return (0, _mithril2.default)(\"div#container\", [(0, _mithril2.default)(menu), (0, _mithril2.default)(\"div#app\", [(0, _mithril2.default)(\"div#greetings\", \"Purr-fect day to you, Hooman!\"), (0, _mithril2.default)(\"div#purr_container\", [(0, _mithril2.default)(purr), (0, _mithril2.default)(\"div#count\", 1)]), (0, _mithril2.default)(message), (0, _mithril2.default)(button)])]);\n  }\n\n  //Mount it baby one more time.\n};_mithril2.default.mount(document.getElementById(\"root\"), App);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9pbmRleC5qcz8xNjg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtIGZyb20gXCIuL21pdGhyaWwuanNcIlxyXG5pbXBvcnQgYW5pbWUgZnJvbSAnLi9hbmltZS5qcydcclxuaW1wb3J0IHsgc2V0VGltZW91dCwgc2V0SW50ZXJ2YWwgfSBmcm9tIFwidGltZXJzXCI7XHJcbmltcG9ydCB0aXBweSBmcm9tICd0aXBweS5qcydcclxuXHJcbi8qKioqKioqKioqKioqKioqKioqKipPbmUgc2lnbmFsIGluaXRpYWxpemF0aW9ucyoqKioqKioqKioqKioqKioqKioqKioqKi9cclxudmFyIE9uZVNpZ25hbCA9IHdpbmRvdy5PbmVTaWduYWwgfHwgW107XHJcbk9uZVNpZ25hbC5wdXNoKGZ1bmN0aW9uKCkge1xyXG4gIE9uZVNpZ25hbC5pbml0KHtcclxuICAgIGFwcElkOiBcIjg3YTM4MDI5LWJkYTUtNGExMC1hNGM5LTY5NzQ5MmIzNmQ4ZlwiLFxyXG4gICAgYXV0b1JlZ2lzdGVyOiBmYWxzZSxcclxuICAgIG5vdGlmeUJ1dHRvbjoge1xyXG4gICAgICAgIGVuYWJsZTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICB3ZWxjb21lTm90aWZpY2F0aW9uOiB7XHJcbiAgICAgIFwidGl0bGVcIjogXCJOb3RpZmljYXRpb25zXCIsXHJcbiAgICAgIFwibWVzc2FnZVwiOiBcIlRoYW5rcyBmb3Igc3Vic2NyaWJpbmchXCIsXHJcbiAgICB9LFxyXG4gIH0pO1xyXG59KTtcclxuXHJcbk9uZVNpZ25hbC5wdXNoKGZ1bmN0aW9uKCkge1xyXG4gIC8vIElmIHdlJ3JlIG9uIGFuIHVuc3VwcG9ydGVkIGJyb3dzZXIsIGRvIG5vdGhpbmdcclxuICBpZiAoIU9uZVNpZ25hbC5pc1B1c2hOb3RpZmljYXRpb25zU3VwcG9ydGVkKCkpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gIH1cclxuICAvL3VwZGF0ZU1hbmdlV2ViUHVzaFN1YnNjcmlwdGlvbkJ1dHRvbihidXR0b25TZWxlY3Rvcik7XHJcbiAgLy9PbmVTaWduYWwub24oXCJzdWJzY3JpcHRpb25DaGFuZ2VcIiwgZnVuY3Rpb24oaXNTdWJzY3JpYmVkKSB7XHJcbiAgICAgIC8qIElmIHRoZSB1c2VyJ3Mgc3Vic2NyaXB0aW9uIHN0YXRlIGNoYW5nZXMgZHVyaW5nIHRoZSBwYWdlJ3Mgc2Vzc2lvbiwgdXBkYXRlIHRoZSBidXR0b24gdGV4dCAqL1xyXG4gICAgICAvL3VwZGF0ZU1hbmdlV2ViUHVzaFN1YnNjcmlwdGlvbkJ1dHRvbihidXR0b25TZWxlY3Rvcik7XHJcbiAgLy99KTtcclxufSk7XHJcbi8qKioqKioqKioqKioqKioqKioqKipGdW5jdGlvbnMqKioqKioqKioqKioqKioqKioqKioqKiovXHJcbnZhciBmbiA9IHtcclxuICBvbk1hbmFnZVdlYlB1c2hTdWJzY3JpcHRpb25CdXR0b25DbGlja2VkOiBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgIGZuLmdldFN1YnNjcmlwdGlvblN0YXRlKCkudGhlbihmdW5jdGlvbihzdGF0ZSkge1xyXG4gICAgICAgIGlmIChzdGF0ZS5pc1B1c2hFbmFibGVkKSB7XHJcbiAgICAgICAgICAgIC8qIFN1YnNjcmliZWQsIG9wdCB0aGVtIG91dCAqL1xyXG4gICAgICAgICAgICBPbmVTaWduYWwuc2V0U3Vic2NyaXB0aW9uKGZhbHNlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoc3RhdGUuaXNPcHRlZE91dCkge1xyXG4gICAgICAgICAgICAgICAgLyogT3B0ZWQgb3V0LCBvcHQgdGhlbSBiYWNrIGluICovXHJcbiAgICAgICAgICAgICAgICBPbmVTaWduYWwuc2V0U3Vic2NyaXB0aW9uKHRydWUpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLyogVW5zdWJzY3JpYmVkLCBzdWJzY3JpYmUgdGhlbSAqL1xyXG4gICAgICAgICAgICAgICAgT25lU2lnbmFsLnJlZ2lzdGVyRm9yUHVzaE5vdGlmaWNhdGlvbnMoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICB9LFxyXG4gIHVwZGF0ZU1hbmdlV2ViUHVzaFN1YnNjcmlwdGlvbkJ1dHRvbjogZnVuY3Rpb24gKGJ1dHRvblNlbGVjdG9yKSB7XHJcbiAgICB2YXIgaGlkZVdoZW5TdWJzY3JpYmVkID0gZmFsc2U7XHJcbiAgICB2YXIgc3Vic2NyaWJlVGV4dCA9IFwiU3Vic2NyaWJlIHRvIE5vdGlmaWNhdGlvbnNcIjtcclxuICAgIHZhciB1bnN1YnNjcmliZVRleHQgPSBcIlVuc3Vic2NyaWJlIGZyb20gTm90aWZpY2F0aW9uc1wiO1xyXG5cclxuICAgIGZuLmdldFN1YnNjcmlwdGlvblN0YXRlKCkudGhlbihmdW5jdGlvbihzdGF0ZSkge1xyXG4gICAgICAgIHZhciBidXR0b25UZXh0ID0gIXN0YXRlLmlzUHVzaEVuYWJsZWQgfHwgc3RhdGUuaXNPcHRlZE91dCA/IHN1YnNjcmliZVRleHQgOiB1bnN1YnNjcmliZVRleHQ7XHJcblxyXG4gICAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihidXR0b25TZWxlY3Rvcik7XHJcbiAgICAgICAgaWYgKGVsZW1lbnQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGZuLm9uTWFuYWdlV2ViUHVzaFN1YnNjcmlwdGlvbkJ1dHRvbkNsaWNrZWQpO1xyXG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmbi5vbk1hbmFnZVdlYlB1c2hTdWJzY3JpcHRpb25CdXR0b25DbGlja2VkKTtcclxuICAgICAgICBlbGVtZW50LnRleHRDb250ZW50ID0gYnV0dG9uVGV4dDtcclxuXHJcbiAgICAgICAgaWYgKHN0YXRlLmhpZGVXaGVuU3Vic2NyaWJlZCAmJiBzdGF0ZS5pc1B1c2hFbmFibGVkKSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSxcclxuICBnZXRTdWJzY3JpcHRpb25TdGF0ZTogZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW1xyXG4gICAgICBPbmVTaWduYWwuaXNQdXNoTm90aWZpY2F0aW9uc0VuYWJsZWQoKSxcclxuICAgICAgT25lU2lnbmFsLmlzT3B0ZWRPdXQoKVxyXG4gICAgXSkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcclxuICAgICAgICB2YXIgaXNQdXNoRW5hYmxlZCA9IHJlc3VsdFswXTtcclxuICAgICAgICB2YXIgaXNPcHRlZE91dCA9IHJlc3VsdFsxXTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaXNQdXNoRW5hYmxlZDogaXNQdXNoRW5hYmxlZCxcclxuICAgICAgICAgICAgaXNPcHRlZE91dDogaXNPcHRlZE91dFxyXG4gICAgICAgIH07XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXHJcbi8qKioqKioqKioqKioqKioqKioqKipDb21wb25lbnRzKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG52YXIgbWVudSA9IHtcclxuICBhYm91dDogXCJUaGlzIGlzIGFib3V0IG1lc3NhZ2VcIixcclxuICBvbmNyZWF0ZTogKHZub2RlKT0+e1xyXG4gICAgdGlwcHkoXCIubWVudV9pdGVtXCIse1xyXG4gICAgICB0cmlnZ2VyOiAnY2xpY2snLFxyXG4gICAgICBhcnJvdzogdHJ1ZSxcclxuICAgICAgYXJyb3dUeXBlOiAncm91bmQnLFxyXG4gICAgICBhbmltYXRlRmlsbDogdHJ1ZSxcclxuICAgICAgZGlzdGFuY2U6IDEsXHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgdmlldzogKHZub2RlKT0+e1xyXG4gICAgcmV0dXJuICBtKFwiZGl2I21lbnVcIixbXHJcbiAgICAgIG0oXCIubWVudV9pdGVtXCIse3RpdGxlOm1lbnUuYWJvdXR9LFwiQWJvdXRcIiksXHJcbiAgICAgIG0oXCIubWVudV9pdGVtXCIsXCJDcmVkaXRzXCIpLFxyXG4gICAgICBtKFwiLm1lbnVfaXRlbVwiLFwiSGVscD9cIiksXHJcbiAgICAgIC8vbShcIi5tZW51X2l0ZW1cIixcIndpdGjinaTvuI9ieSA7cFwiKVxyXG4gICAgXSk7XHJcbiAgfVxyXG59XHJcblxyXG52YXIgbWVzc2FnZSA9IHtcclxuICB2aWV3OiAodm5vZGUpPT57XHJcbiAgICByZXR1cm4gIG0oXCJkaXYjbWVzc2FnZVwiLFtcclxuICAgICAgXCJMZXQncyBnZXQgc3Vic2NyaWInbiwgUHVzaCB0aGUgYnV0dG9uIG1lb3cobm93KSFcIlxyXG4gICAgXSk7XHJcbiAgfVxyXG59XHJcblxyXG52YXIgcHVyciA9IHtcclxuICB2aWV3OiAodm5vZGUpPT57XHJcbiAgICByZXR1cm4gIG0oXCJkaXYjcHVyclwiLFtcclxuICAgICAgbShcImltZ1wiLCB7XHJcbiAgICAgICAgc3JjOiBcIi4vc3RhdGljL2NhdHB1cnIuZ2lmXCJcclxuICAgICAgfSlcclxuICAgIF0pO1xyXG4gIH1cclxufVxyXG5cclxudmFyIGJ1dHRvbiA9IHtcclxuICBkbzogKCk9PntcclxuICAgIGFsZXJ0KFwic29tZXRoaW5nXCIpO1xyXG4gIH0sXHJcbiAgdmlldzogKHZub2RlKT0+e1xyXG4gICAgcmV0dXJuICBtKFwiZGl2I3N1YkJ1dHRvblwiLHtvbmNsaWNrOiBidXR0b24uZG99LCBbXCJTdWJzY3JpYmVcIl0pO1xyXG4gIH1cclxufVxyXG5cclxudmFyIEFwcCA9IHtcclxuICB2aWV3OiAodm5vZGUpPT57XHJcbiAgICBjb25zb2xlLmxvZyhcIlJlZHJhdzpcIiwgdm5vZGUpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gIG0oXCJkaXYjY29udGFpbmVyXCIsIFtcclxuICAgICAgbShtZW51KSxcclxuICAgICAgbShcImRpdiNhcHBcIixcclxuICAgICAgICBbXHJcbiAgICAgICAgICBtKFwiZGl2I2dyZWV0aW5nc1wiLFwiUHVyci1mZWN0IGRheSB0byB5b3UsIEhvb21hbiFcIiksXHJcbiAgICAgICAgICBtKFwiZGl2I3B1cnJfY29udGFpbmVyXCIsW1xyXG4gICAgICAgICAgICBtKHB1cnIpLFxyXG4gICAgICAgICAgICBtKFwiZGl2I2NvdW50XCIsIDEpXHJcbiAgICAgICAgICBdKSxcclxuICAgICAgICAgIG0obWVzc2FnZSksXHJcbiAgICAgICAgICBtKGJ1dHRvbilcclxuICAgICAgICBdKVxyXG4gICAgICBdKTtcclxuICB9XHJcbn1cclxuXHJcbi8vTW91bnQgaXQgYmFieSBvbmUgbW9yZSB0aW1lLlxyXG5tLm1vdW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicm9vdFwiKSwgQXBwKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gaW5kZXguanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTs7O0FBQUE7QUFDQTtBQUFBO0FBQ0E7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBRkE7QUFOQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQTFEQTtBQTREQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFPQTtBQUNBO0FBQ0E7QUFJQTtBQUpBO0FBTUE7QUFsQkE7QUFDQTtBQW9CQTtBQUNBO0FBQ0E7QUFHQTtBQUxBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFFQTtBQURBO0FBSUE7QUFQQTtBQUNBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWFBO0FBQ0E7QUFFQTtBQXBCQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!********************!*\
  !*** ./mithril.js ***!
  \********************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate, global) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n  function x(b, c, e, h, p, l) {\n    return { tag: b, key: c, attrs: e, children: h, text: p, dom: l, domSize: void 0, state: void 0, events: void 0, instance: void 0, skip: !1 };\n  }function R(b) {\n    for (var c in b) {\n      if (G.call(b, c)) return !1;\n    }return !0;\n  }function w(b) {\n    var c = arguments[1],\n        e = 2;if (null == b || \"string\" !== typeof b && \"function\" !== typeof b && \"function\" !== typeof b.view) throw Error(\"The selector must be either a string or a component.\");if (\"string\" === typeof b) {\n      var h;if (!(h = S[b])) {\n        var p = \"div\";for (var l = [], k = {}; h = W.exec(b);) {\n          var q = h[1],\n              t = h[2];\"\" === q && \"\" !== t ? p = t : \"#\" === q ? k.id = t : \".\" === q ? l.push(t) : \"[\" === h[3][0] && ((q = h[6]) && (q = q.replace(/\\\\([\"'])/g, \"$1\").replace(/\\\\\\\\/g, \"\\\\\")), \"class\" === h[4] ? l.push(q) : k[h[4]] = \"\" === q ? q : q || !0);\n        }0 < l.length && (k.className = l.join(\" \"));h = S[b] = { tag: p, attrs: k };\n      }\n    }if (null == c) c = {};else if (\"object\" !== (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) || null != c.tag || Array.isArray(c)) c = {}, e = 1;if (arguments.length === e + 1) p = arguments[e], Array.isArray(p) || (p = [p]);else for (p = []; e < arguments.length;) {\n      p.push(arguments[e++]);\n    }e = x.normalizeChildren(p);if (\"string\" === typeof b) {\n      p = !1;var m, A;l = c.className || c[\"class\"];if (!R(h.attrs) && !R(c)) {\n        k = {};for (var a in c) {\n          G.call(c, a) && (k[a] = c[a]);\n        }c = k;\n      }for (a in h.attrs) {\n        G.call(h.attrs, a) && (c[a] = h.attrs[a]);\n      }void 0 !== l && (void 0 !== c[\"class\"] && (c[\"class\"] = void 0, c.className = l), null != h.attrs.className && (c.className = h.attrs.className + \" \" + l));for (a in c) {\n        if (G.call(c, a) && \"key\" !== a) {\n          p = !0;break;\n        }\n      }Array.isArray(e) && 1 === e.length && null != e[0] && \"#\" === e[0].tag ? A = e[0].children : m = e;return x(h.tag, c.key, p ? c : void 0, m, A);\n    }return x(b, c.key, c, e);\n  }function X(b) {\n    var c = 0,\n        e = null,\n        h = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : setTimeout;return function () {\n      var p = Date.now() - c;null === e && (e = h(function () {\n        e = null;b();c = Date.now();\n      }, 16 - p));\n    };\n  }x.normalize = function (b) {\n    return Array.isArray(b) ? x(\"[\", void 0, void 0, x.normalizeChildren(b), void 0, void 0) : null != b && \"object\" !== (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) ? x(\"#\", void 0, void 0, !1 === b ? \"\" : b, void 0, void 0) : b;\n  };x.normalizeChildren = function (b) {\n    for (var c = 0; c < b.length; c++) {\n      b[c] = x.normalize(b[c]);\n    }return b;\n  };var W = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g,\n      S = {},\n      G = {}.hasOwnProperty;w.trust = function (b) {\n    null == b && (b = \"\");return x(\"<\", void 0, void 0, b, void 0, void 0);\n  };w.fragment = function (b, c) {\n    return x(\"[\", b.key, b, x.normalizeChildren(c), void 0, void 0);\n  };var _r = function r(b) {\n    function c(b, a) {\n      return function M(c) {\n        var z;try {\n          if (!a || null == c || \"object\" !== (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) && \"function\" !== typeof c || \"function\" !== typeof (z = c.then)) m(function () {\n            a || 0 !== b.length || console.error(\"Possible unhandled promise rejection:\", c);for (var e = 0; e < b.length; e++) {\n              b[e](c);\n            }p.length = 0;l.length = 0;t.state = a;t.retry = function () {\n              M(c);\n            };\n          });else {\n            if (c === h) throw new TypeError(\"Promise can't be resolved w/ itself\");e(z.bind(c));\n          }\n        } catch (Y) {\n          q(Y);\n        }\n      };\n    }function e(b) {\n      function a(a) {\n        return function (b) {\n          0 < c++ || a(b);\n        };\n      }var c = 0,\n          t = a(q);try {\n        b(a(k), t);\n      } catch (M) {\n        t(M);\n      }\n    }if (!(this instanceof _r)) throw Error(\"Promise must be called with `new`\");if (\"function\" !== typeof b) throw new TypeError(\"executor must be a function\");var h = this,\n        p = [],\n        l = [],\n        k = c(p, !0),\n        q = c(l, !1),\n        t = h._instance = { resolvers: p, rejectors: l },\n        m = \"function\" === typeof setImmediate ? setImmediate : setTimeout;e(b);\n  };_r.prototype.then = function (b, c) {\n    function e(b, c, e, k) {\n      c.push(function (a) {\n        if (\"function\" !== typeof b) e(a);else try {\n          p(b(a));\n        } catch (B) {\n          l && l(B);\n        }\n      });\"function\" === typeof h.retry && k === h.state && h.retry();\n    }var h = this._instance,\n        p,\n        l,\n        k = new _r(function (b, c) {\n      p = b;l = c;\n    });e(b, h.resolvers, p, !0);e(c, h.rejectors, l, !1);return k;\n  };_r.prototype[\"catch\"] = function (b) {\n    return this.then(null, b);\n  };_r.prototype[\"finally\"] = function (b) {\n    return this.then(function (c) {\n      return _r.resolve(b()).then(function () {\n        return c;\n      });\n    }, function (c) {\n      return _r.resolve(b()).then(function () {\n        return _r.reject(c);\n      });\n    });\n  };\n  _r.resolve = function (b) {\n    return b instanceof _r ? b : new _r(function (c) {\n      c(b);\n    });\n  };_r.reject = function (b) {\n    return new _r(function (c, e) {\n      e(b);\n    });\n  };_r.all = function (b) {\n    return new _r(function (c, e) {\n      var h = b.length,\n          p = 0,\n          l = [];if (0 === b.length) c([]);else for (var k = 0; k < b.length; k++) {\n        (function (k) {\n          function t(b) {\n            p++;l[k] = b;p === h && c(l);\n          }null == b[k] || \"object\" !== _typeof(b[k]) && \"function\" !== typeof b[k] || \"function\" !== typeof b[k].then ? t(b[k]) : b[k].then(t, e);\n        })(k);\n      }\n    });\n  };_r.race = function (b) {\n    return new _r(function (c, e) {\n      for (var h = 0; h < b.length; h++) {\n        b[h].then(c, e);\n      }\n    });\n  };\"undefined\" !== typeof window ? (\"undefined\" === typeof window.Promise ? window.Promise = _r : window.Promise.prototype[\"finally\"] || (window.Promise.prototype[\"finally\"] = _r.prototype[\"finally\"]), _r = window.Promise) : \"undefined\" !== typeof global && (\"undefined\" === typeof global.Promise ? global.Promise = _r : global.Promise.prototype[\"finally\"] || (global.Promise.prototype[\"finally\"] = _r.prototype[\"finally\"]), _r = global.Promise);var E = function E(b) {\n    function c(b, h) {\n      if (Array.isArray(h)) for (var k = 0; k < h.length; k++) {\n        c(b + \"[\" + k + \"]\", h[k]);\n      } else if (\"[object Object]\" === Object.prototype.toString.call(h)) for (k in h) {\n        c(b + \"[\" + k + \"]\", h[k]);\n      } else e.push(encodeURIComponent(b) + (null != h && \"\" !== h ? \"=\" + encodeURIComponent(h) : \"\"));\n    }if (\"[object Object]\" !== Object.prototype.toString.call(b)) return \"\";var e = [],\n        h;for (h in b) {\n      c(h, b[h]);\n    }return e.join(\"&\");\n  },\n      Z = /^file:\\/\\//i,\n      P = function (b, c) {\n    function e() {\n      function a() {\n        0 === --b && \"function\" === typeof A && A();\n      }var b = 0;return function J(c) {\n        var e = c.then;c.then = function () {\n          b++;var t = e.apply(c, arguments);t.then(a, function (c) {\n            a();\n            if (0 === b) throw c;\n          });return J(t);\n        };return c;\n      };\n    }function h(a, b) {\n      if (\"string\" === typeof a) {\n        var c = a;a = b || {};null == a.url && (a.url = c);\n      }return a;\n    }function p(a, b) {\n      if (null == b) return a;for (var c = a.match(/:[^\\/]+/gi) || [], e = 0; e < c.length; e++) {\n        var t = c[e].slice(1);null != b[t] && (a = a.replace(c[e], b[t]));\n      }return a;\n    }function l(a, b) {\n      var c = E(b);if (\"\" !== c) {\n        var e = 0 > a.indexOf(\"?\") ? \"?\" : \"&\";a += e + c;\n      }return a;\n    }function k(a) {\n      try {\n        return \"\" !== a ? JSON.parse(a) : null;\n      } catch (B) {\n        throw Error(a);\n      }\n    }function q(a) {\n      return a.responseText;\n    }function t(a, b) {\n      if (\"function\" === typeof a) if (Array.isArray(b)) for (var c = 0; c < b.length; c++) {\n        b[c] = new a(b[c]);\n      } else return new a(b);return b;\n    }var m = 0,\n        A;return { request: function request(a, m) {\n        var z = e();a = h(a, m);var B = new c(function (c, e) {\n          null == a.method && (a.method = \"GET\");a.method = a.method.toUpperCase();var h = \"GET\" === a.method || \"TRACE\" === a.method ? !1 : \"boolean\" === typeof a.useBody ? a.useBody : !0;\"function\" !== typeof a.serialize && (a.serialize = \"undefined\" !== typeof FormData && a.data instanceof FormData ? function (a) {\n            return a;\n          } : JSON.stringify);\"function\" !== typeof a.deserialize && (a.deserialize = k);\"function\" !== typeof a.extract && (a.extract = q);a.url = p(a.url, a.data);h ? a.data = a.serialize(a.data) : a.url = l(a.url, a.data);var m = new b.XMLHttpRequest(),\n              z = !1,\n              B = m.abort;m.abort = function () {\n            z = !0;B.call(m);\n          };m.open(a.method, a.url, \"boolean\" === typeof a.async ? a.async : !0, \"string\" === typeof a.user ? a.user : void 0, \"string\" === typeof a.password ? a.password : void 0);a.serialize !== JSON.stringify || !h || a.headers && a.headers.hasOwnProperty(\"Content-Type\") || m.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n          a.deserialize !== k || a.headers && a.headers.hasOwnProperty(\"Accept\") || m.setRequestHeader(\"Accept\", \"application/json, text/*\");a.withCredentials && (m.withCredentials = a.withCredentials);a.timeout && (m.timeout = a.timeout);for (var A in a.headers) {\n            ({}).hasOwnProperty.call(a.headers, A) && m.setRequestHeader(A, a.headers[A]);\n          }\"function\" === typeof a.config && (m = a.config(m, a) || m);m.onreadystatechange = function () {\n            if (!z && 4 === m.readyState) try {\n              var b = a.extract !== q ? a.extract(m, a) : a.deserialize(a.extract(m, a));if (a.extract !== q || 200 <= m.status && 300 > m.status || 304 === m.status || Z.test(a.url)) c(t(a.type, b));else {\n                var h = Error(m.responseText);h.code = m.status;h.response = b;e(h);\n              }\n            } catch (I) {\n              e(I);\n            }\n          };h && null != a.data ? m.send(a.data) : m.send();\n        });return !0 === a.background ? B : z(B);\n      }, jsonp: function jsonp(a, k) {\n        var z = e();a = h(a, k);var q = new c(function (c, e) {\n          var h = a.callbackName || \"_mithril_\" + Math.round(1E16 * Math.random()) + \"_\" + m++,\n              k = b.document.createElement(\"script\");b[h] = function (e) {\n            k.parentNode.removeChild(k);c(t(a.type, e));delete b[h];\n          };k.onerror = function () {\n            k.parentNode.removeChild(k);\n            e(Error(\"JSONP request failed\"));delete b[h];\n          };null == a.data && (a.data = {});a.url = p(a.url, a.data);a.data[a.callbackKey || \"callback\"] = h;k.src = l(a.url, a.data);b.document.documentElement.appendChild(k);\n        });return !0 === a.background ? q : z(q);\n      }, setCompletionCallback: function setCompletionCallback(a) {\n        A = a;\n      } };\n  }(window, _r),\n      V = function V(b) {\n    function c(g, d) {\n      if (g.state !== d) throw Error(\"`vnode.state` must not be modified\");\n    }function e(g) {\n      var d = g.state;try {\n        return this.apply(d, arguments);\n      } finally {\n        c(g, d);\n      }\n    }function h(g, d, f, a, b, c, e) {\n      for (; f < a; f++) {\n        var h = d[f];\n        null != h && p(g, h, b, e, c);\n      }\n    }function p(g, d, f, b, c) {\n      var e = d.tag;if (\"string\" === typeof e) switch (d.state = {}, null != d.attrs && L(d.attrs, d, f), e) {case \"#\":\n          return d.dom = C.createTextNode(d.children), a(g, d.dom, c), d.dom;case \"<\":\n          return l(g, d, b, c);case \"[\":\n          var t = C.createDocumentFragment();null != d.children && (e = d.children, h(t, e, 0, e.length, f, null, b));d.dom = t.firstChild;d.domSize = t.childNodes.length;a(g, t, c);return t;default:\n          var n = d.tag,\n              m = (e = d.attrs) && e.is;n = (b = d.attrs && d.attrs.xmlns || G[d.tag] || b) ? m ? C.createElementNS(b, n, { is: m }) : C.createElementNS(b, n) : m ? C.createElement(n, { is: m }) : C.createElement(n);d.dom = n;if (null != e) for (t in m = b, e) {\n            K(d, t, null, e[t], m);\n          }a(g, n, c);null != d.attrs && null != d.attrs.contenteditable ? B(d) : (null != d.text && (\"\" !== d.text ? n.textContent = d.text : d.children = [x(\"#\", void 0, void 0, d.text, void 0, void 0)]), null != d.children && (g = d.children, h(n, g, 0, g.length, f, null, b), g = d.attrs, \"select\" === d.tag && null != g && (\"value\" in g && K(d, \"value\", null, g.value, void 0), \"selectedIndex\" in g && K(d, \"selectedIndex\", null, g.selectedIndex, void 0))));return n;} else return k(d, f), null != d.instance ? (f = p(g, d.instance, f, b, c), d.dom = d.instance.dom, d.domSize = null != d.dom ? d.instance.domSize : 0, a(g, f, c), d = f) : (d.domSize = 0, d = I), d;\n    }function l(g, d, f, b) {\n      var c = d.children.match(/^\\s*?<(\\w+)/im) || [];c = C.createElement(H[c[1]] || \"div\");\"http://www.w3.org/2000/svg\" === f ? (c.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\">' + d.children + \"</svg>\", c = c.firstChild) : c.innerHTML = d.children;d.dom = c.firstChild;d.domSize = c.childNodes.length;for (d = C.createDocumentFragment(); f = c.firstChild;) {\n        d.appendChild(f);\n      }a(g, d, b);return d;\n    }function k(g, d) {\n      if (\"function\" === typeof g.tag.view) {\n        g.state = Object.create(g.tag);var f = g.state.view;if (null != f.$$reentrantLock$$) return I;f.$$reentrantLock$$ = !0;\n      } else {\n        g.state = void 0;f = g.tag;if (null != f.$$reentrantLock$$) return I;f.$$reentrantLock$$ = !0;g.state = null != g.tag.prototype && \"function\" === typeof g.tag.prototype.view ? new g.tag(g) : g.tag(g);\n      }null != g.attrs && L(g.attrs, g, d);L(g.state, g, d);g.instance = x.normalize(e.call(g.state.view, g));if (g.instance === g) throw Error(\"A view cannot return the vnode it received as argument\");\n      f.$$reentrantLock$$ = null;\n    }function q(g, d, f, b, c, e, k) {\n      if (!(d === f && !b || null == d && null == f)) if (null == d) h(g, f, 0, f.length, c, e, k);else if (null == f) z(d, 0, d.length, f, b);else {\n        for (var n = 0, l = Math.min(d.length, f.length), q = d.length, B = !1, D = !1; n < l; n++) {\n          if (null != d[n] && null != f[n]) {\n            null == d[n].key && null == f[n].key && (D = !0);break;\n          }\n        }if (D && q === f.length) for (n = 0; n < q; n++) {\n          d[n] === f[n] && !b || null == d[n] && null == f[n] || (null == d[n] ? p(g, f[n], c, k, A(d, n + 1, q, e)) : null == f[n] ? z(d, n, n + 1, f, b) : t(g, d[n], f[n], c, A(d, n + 1, q, e), b, k));\n        } else {\n          a: {\n            if (null != d.pool && Math.abs(d.pool.length - f.length) <= Math.abs(d.length - f.length) && (n = f[0] && f[0].children && f[0].children.length || 0, Math.abs((d.pool[0] && d.pool[0].children && d.pool[0].children.length || 0) - n) <= Math.abs((d[0] && d[0].children && d[0].children.length || 0) - n))) {\n              n = !0;break a;\n            }n = !1;\n          }n && (B = !0, d = d.concat(d.pool));var r = n = 0;l = d.length - 1;for (var F = f.length - 1, x, v, y, u; l >= r && F >= n;) {\n            if (v = d[r], y = f[n], u = B && r >= q, v === y && !u && !b || null == v && null == y) r++, n++;else if (null == v) (D || null == y.key) && p(g, f[n], c, k, A(d, ++n, q, e)), r++;else if (null == y) {\n              if (D || null == v.key) z(d, n, n + 1, f, b), r++;n++;\n            } else if (v.key === y.key) r++, n++, t(g, v, y, c, A(d, r, q, e), u || b, k), u && v.tag === y.tag && a(g, m(y), e);else if (v = d[l], u = B && l >= q, v !== y || u || b) {\n              if (null == v) l--;else if (null == y) n++;else if (v.key === y.key) t(g, v, y, c, A(d, l + 1, q, e), u || b, k), (u && v.tag === y.tag || n < F) && a(g, m(y), A(d, r, q, e)), l--, n++;else break;\n            } else l--, n++;\n          }for (; l >= r && F >= n;) {\n            v = d[l];y = f[F];u = B && l >= q;if (v !== y || u || b) {\n              if (null == v) l--;else {\n                if (null != y) if (v.key === y.key) t(g, v, y, c, A(d, l + 1, q, e), u || b, k), u && v.tag === y.tag && a(g, m(y), e), null != v.dom && (e = v.dom), l--;else {\n                  if (!x) {\n                    x = d;D = l;v = {};for (u = 0; u < D; u++) {\n                      var w = x[u];null != w && (w = w.key, null != w && (v[w] = u));\n                    }x = v;\n                  }null != y && (D = x[y.key], null != D ? (v = d[D], u = B && D >= q, t(g, v, y, c, A(d, l + 1, q, e), u || b, k), a(g, m(y), e), v.skip = !0, null != v.dom && (e = v.dom)) : e = p(g, y, c, k, e));\n                }F--;\n              }\n            } else l--, F--;if (F < n) break;\n          }h(g, f, n, F + 1, c, e, k);z(d, r, Math.min(l + 1, q), f, b);if (B) for (g = Math.max(r, q); l >= g; l--) {\n            d[l].skip ? d[l].skip = !1 : J(d[l], f);\n          }\n        }\n      }\n    }function t(g, d, f, b, a, c, h) {\n      var n = d.tag;if (n === f.tag) {\n        f.state = d.state;f.events = d.events;var z;if (z = !c) {\n          var A, D;null != f.attrs && \"function\" === typeof f.attrs.onbeforeupdate && (A = e.call(f.attrs.onbeforeupdate, f, d));\"string\" !== typeof f.tag && \"function\" === typeof f.state.onbeforeupdate && (D = e.call(f.state.onbeforeupdate, f, d));void 0 === A && void 0 === D || A || D ? z = !1 : (f.dom = d.dom, f.domSize = d.domSize, f.instance = d.instance, z = !0);\n        }if (!z) if (\"string\" === typeof n) switch (null != f.attrs && (c ? (f.state = {}, L(f.attrs, f, b)) : N(f.attrs, f, b)), n) {case \"#\":\n            d.children.toString() !== f.children.toString() && (d.dom.nodeValue = f.children);f.dom = d.dom;break;case \"<\":\n            d.children !== f.children ? (m(d), l(g, f, h, a)) : (f.dom = d.dom, f.domSize = d.domSize);break;case \"[\":\n            q(g, d.children, f.children, c, b, a, h);d = 0;b = f.children;f.dom = null;if (null != b) {\n              for (c = 0; c < b.length; c++) {\n                var u = b[c];null != u && null != u.dom && (null == f.dom && (f.dom = u.dom), d += u.domSize || 1);\n              }1 !== d && (f.domSize = d);\n            }break;default:\n            g = f.dom = d.dom;h = f.attrs && f.attrs.xmlns || G[f.tag] || h;\"textarea\" === f.tag && (null == f.attrs && (f.attrs = {}), null != f.text && (f.attrs.value = f.text, f.text = void 0));a = d.attrs;n = f.attrs;z = h;\n            if (null != n) for (u in n) {\n              K(f, u, a && a[u], n[u], z);\n            }if (null != a) for (u in a) {\n              null != n && u in n || (\"className\" === u && (u = \"class\"), \"o\" !== u[0] || \"n\" !== u[1] || T(u) ? \"key\" !== u && f.dom.removeAttribute(u) : U(f, u, void 0));\n            }null != f.attrs && null != f.attrs.contenteditable ? B(f) : null != d.text && null != f.text && \"\" !== f.text ? d.text.toString() !== f.text.toString() && (d.dom.firstChild.nodeValue = f.text) : (null != d.text && (d.children = [x(\"#\", void 0, void 0, d.text, void 0, d.dom.firstChild)]), null != f.text && (f.children = [x(\"#\", void 0, void 0, f.text, void 0, void 0)]), q(g, d.children, f.children, c, b, null, h));} else {\n          if (c) k(f, b);else {\n            f.instance = x.normalize(e.call(f.state.view, f));if (f.instance === f) throw Error(\"A view cannot return the vnode it received as argument\");null != f.attrs && N(f.attrs, f, b);N(f.state, f, b);\n          }null != f.instance ? (null == d.instance ? p(g, f.instance, b, h, a) : t(g, d.instance, f.instance, b, a, c, h), f.dom = f.instance.dom, f.domSize = f.instance.domSize) : null != d.instance ? (r(d.instance, null, c), f.dom = void 0, f.domSize = 0) : (f.dom = d.dom, f.domSize = d.domSize);\n        }\n      } else r(d, null, c), p(g, f, b, h, a);\n    }function m(g) {\n      var d = g.domSize;if (null != d || null == g.dom) {\n        var b = C.createDocumentFragment();if (0 < d) {\n          for (g = g.dom; --d;) {\n            b.appendChild(g.nextSibling);\n          }b.insertBefore(g, b.firstChild);\n        }return b;\n      }return g.dom;\n    }function A(g, d, b, a) {\n      for (; d < b; d++) {\n        if (null != g[d] && null != g[d].dom) return g[d].dom;\n      }return a;\n    }function a(g, d, b) {\n      b ? g.insertBefore(d, b) : g.appendChild(d);\n    }function B(g) {\n      var d = g.children;if (null != d && 1 === d.length && \"<\" === d[0].tag) d = d[0].children, g.dom.innerHTML !== d && (g.dom.innerHTML = d);else if (null != g.text || null != d && 0 !== d.length) throw Error(\"Child node of a contenteditable must be trusted\");\n    }function z(g, d, b, a, c) {\n      for (; d < b; d++) {\n        var f = g[d];null != f && (f.skip ? f.skip = !1 : r(f, a, c));\n      }\n    }function r(g, d, b) {\n      function a() {\n        if (++h === f && (b || (c(g, t), w(g)), g.dom)) {\n          var a = g.domSize || 1;if (1 < a) for (var e = g.dom; --a;) {\n            var n = e.nextSibling,\n                k = n.parentNode;null != k && k.removeChild(n);\n          }a = g.dom;e = a.parentNode;null != e && e.removeChild(a);J(g, d);\n        }\n      }var f = 1,\n          h = 0;if (!b) {\n        var t = g.state;if (g.attrs && \"function\" === typeof g.attrs.onbeforeremove) {\n          var k = e.call(g.attrs.onbeforeremove, g);null != k && \"function\" === typeof k.then && (f++, k.then(a, a));\n        }\"string\" !== typeof g.tag && \"function\" === typeof g.state.onbeforeremove && (k = e.call(g.state.onbeforeremove, g), null != k && \"function\" === typeof k.then && (f++, k.then(a, a)));\n      }a();\n    }function J(b, d) {\n      var a;if (a = null != d && null == b.domSize) a = b.attrs, a = !(null != a && (a.oncreate || a.onupdate || a.onbeforeremove || a.onremove));a && \"string\" === typeof b.tag && (d.pool ? d.pool.push(b) : d.pool = [b]);\n    }function w(a) {\n      a.attrs && \"function\" === typeof a.attrs.onremove && e.call(a.attrs.onremove, a);if (\"string\" !== typeof a.tag) \"function\" === typeof a.state.onremove && e.call(a.state.onremove, a), null != a.instance && w(a.instance);else if (a = a.children, Array.isArray(a)) for (var d = 0; d < a.length; d++) {\n        var b = a[d];null != b && w(b);\n      }\n    }function K(a, d, b, c, e) {\n      if (\"key\" !== d && \"is\" !== d && !T(d)) {\n        if (\"o\" === d[0] && \"n\" === d[1]) return U(a, d, c);if (\"undefined\" === typeof c && \"value\" === d && b !== c) a.dom.value = \"\";else if ((b !== c || \"value\" === d || \"checked\" === d || \"selectedIndex\" === d || \"selected\" === d && a.dom === C.activeElement || \"option\" === a.tag && a.dom.parentNode === C.activeElement || \"object\" === (typeof c === \"undefined\" ? \"undefined\" : _typeof(c))) && void 0 !== c) {\n          var f = a.dom;if (\"xlink:\" === d.slice(0, 6)) f.setAttributeNS(\"http://www.w3.org/1999/xlink\", d, c);else if (\"style\" === d) {\n            if (a = b, null != a && null != c && \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"object\" === (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) && c !== a) {\n              for (var g in c) {\n                c[g] !== a[g] && (f.style[g] = c[g]);\n              }for (g in a) {\n                g in c || (f.style[g] = \"\");\n              }\n            } else if (a === c && (f.style.cssText = \"\", a = null), null == c) f.style.cssText = \"\";else if (\"string\" === typeof c) f.style.cssText = c;else for (g in \"string\" === typeof a && (f.style.cssText = \"\"), c) {\n              f.style[g] = c[g];\n            }\n          } else if (d in f && \"href\" !== d && \"list\" !== d && \"form\" !== d && \"width\" !== d && \"height\" !== d && void 0 === e && !(a.attrs.is || -1 < a.tag.indexOf(\"-\"))) {\n            if (\"value\" === d) {\n              g = \"\" + c;if ((\"input\" === a.tag || \"textarea\" === a.tag) && a.dom.value === g && a.dom === C.activeElement) return;if (\"select\" === a.tag) if (null === c) {\n                if (-1 === a.dom.selectedIndex && a.dom === C.activeElement) return;\n              } else if (null !== b && a.dom.value === g && a.dom === C.activeElement) return;if (\"option\" === a.tag && null != b && a.dom.value === g) return;\n            }\"input\" === a.tag && \"type\" === d ? f.setAttribute(d, c) : f[d] = c;\n          } else \"boolean\" === typeof c ? c ? f.setAttribute(d, \"\") : f.removeAttribute(d) : f.setAttribute(\"className\" === d ? \"class\" : d, c);\n        }\n      }\n    }function T(a) {\n      return \"oninit\" === a || \"oncreate\" === a || \"onupdate\" === a || \"onremove\" === a || \"onbeforeremove\" === a || \"onbeforeupdate\" === a;\n    }function O() {}function U(a, d, b) {\n      null != a.events ? a.events[d] !== b && (null == b || \"function\" !== typeof b && \"object\" !== (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) ? (null != a.events[d] && a.dom.removeEventListener(d.slice(2), a.events, !1), a.events[d] = void 0) : (null == a.events[d] && a.dom.addEventListener(d.slice(2), a.events, !1), a.events[d] = b)) : null == b || \"function\" !== typeof b && \"object\" !== (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) || (a.events = new O(), a.dom.addEventListener(d.slice(2), a.events, !1), a.events[d] = b);\n    }function L(a, d, b) {\n      \"function\" === typeof a.oninit && e.call(a.oninit, d);\"function\" === typeof a.oncreate && b.push(e.bind(a.oncreate, d));\n    }function N(a, d, b) {\n      \"function\" === typeof a.onupdate && b.push(e.bind(a.onupdate, d));\n    }var C = b.document,\n        I = C.createDocumentFragment(),\n        G = { svg: \"http://www.w3.org/2000/svg\", math: \"http://www.w3.org/1998/Math/MathML\" },\n        E,\n        H = { caption: \"table\", thead: \"table\", tbody: \"table\", tfoot: \"table\", tr: \"tbody\", th: \"tr\", td: \"tr\", colgroup: \"table\", col: \"colgroup\" };O.prototype = Object.create(null);O.prototype.handleEvent = function (a) {\n      var d = this[\"on\" + a.type];\"function\" === typeof d ? d.call(a.target, a) : \"function\" === typeof d.handleEvent && d.handleEvent(a);\"function\" === typeof E && E.call(a.target, a);\n    };return { render: function render(a, d) {\n        if (!a) throw Error(\"Ensure the DOM element being passed to m.route/m.mount/m.render is not undefined.\");var b = [],\n            c = C.activeElement,\n            e = a.namespaceURI;null == a.vnodes && (a.textContent = \"\");Array.isArray(d) || (d = [d]);q(a, a.vnodes, x.normalizeChildren(d), !1, b, null, \"http://www.w3.org/1999/xhtml\" === e ? void 0 : e);a.vnodes = d;null != c && C.activeElement !== c && c.focus();for (c = 0; c < b.length; c++) {\n          b[c]();\n        }\n      }, setEventCallback: function setEventCallback(a) {\n        return E = a;\n      } };\n  },\n      H = function (b, c) {\n    function e(b) {\n      b = l.indexOf(b);-1 < b && l.splice(b, 2);\n    }function h() {\n      if (k) throw Error(\"Nested m.redraw.sync() call\");k = !0;for (var b = 1; b < l.length; b += 2) {\n        try {\n          l[b]();\n        } catch (m) {\n          \"undefined\" !== typeof console && console.error(m);\n        }\n      }k = !1;\n    }var p = V(b);p.setEventCallback(function (b) {\n      !1 === b.redraw ? b.redraw = void 0 : q();\n    });var l = [],\n        k = !1,\n        q = (c || X)(h);q.sync = h;return { subscribe: function subscribe(b, c) {\n        e(b);l.push(b, c);\n      }, unsubscribe: e, redraw: q, render: p.render };\n  }(window);P.setCompletionCallback(H.redraw);w.mount = function (b) {\n    return function (c, e) {\n      if (null === e) b.render(c, []), b.unsubscribe(c);else {\n        if (null == e.view && \"function\" !== typeof e) throw Error(\"m.mount(element, component) expects a component, not a vnode\");var h = function h() {\n          b.render(c, x(e));\n        };\n        b.subscribe(c, h);h();\n      }\n    };\n  }(H);var aa = _r,\n      Q = function Q(b) {\n    if (\"\" === b || null == b) return {};\"?\" === b.charAt(0) && (b = b.slice(1));b = b.split(\"&\");for (var c = {}, e = {}, h = 0; h < b.length; h++) {\n      var p = b[h].split(\"=\"),\n          l = decodeURIComponent(p[0]);p = 2 === p.length ? decodeURIComponent(p[1]) : \"\";\"true\" === p ? p = !0 : \"false\" === p && (p = !1);var k = l.split(/\\]\\[?|\\[/),\n          q = c;-1 < l.indexOf(\"[\") && k.pop();for (var t = 0; t < k.length; t++) {\n        l = k[t];var m = k[t + 1];m = \"\" == m || !isNaN(parseInt(m, 10));var r = t === k.length - 1;\"\" === l && (l = k.slice(0, t).join(), null == e[l] && (e[l] = 0), l = e[l]++);null == q[l] && (q[l] = r ? p : m ? [] : {});q = q[l];\n      }\n    }return c;\n  },\n      ba = function ba(b) {\n    function c(c) {\n      var e = b.location[c].replace(/(?:%[a-f89][a-f0-9])+/gim, decodeURIComponent);\"pathname\" === c && \"/\" !== e[0] && (e = \"/\" + e);return e;\n    }function e(b) {\n      return function () {\n        null == k && (k = l(function () {\n          k = null;b();\n        }));\n      };\n    }function h(b, c, e) {\n      var a = b.indexOf(\"?\"),\n          h = b.indexOf(\"#\"),\n          k = -1 < a ? a : -1 < h ? h : b.length;if (-1 < a) {\n        a = Q(b.slice(a + 1, -1 < h ? h : b.length));for (var l in a) {\n          c[l] = a[l];\n        }\n      }if (-1 < h) for (l in c = Q(b.slice(h + 1)), c) {\n        e[l] = c[l];\n      }return b.slice(0, k);\n    }var p = \"function\" === typeof b.history.pushState,\n        l = \"function\" === typeof setImmediate ? setImmediate : setTimeout,\n        k,\n        q = { prefix: \"#!\", getPath: function getPath() {\n        switch (q.prefix.charAt(0)) {case \"#\":\n            return c(\"hash\").slice(q.prefix.length);case \"?\":\n            return c(\"search\").slice(q.prefix.length) + c(\"hash\");default:\n            return c(\"pathname\").slice(q.prefix.length) + c(\"search\") + c(\"hash\");}\n      }, setPath: function setPath(c, e, k) {\n        var a = {},\n            l = {};c = h(c, a, l);if (null != e) {\n          for (var m in e) {\n            a[m] = e[m];\n          }c = c.replace(/:([^\\/]+)/g, function (b, c) {\n            delete a[c];return e[c];\n          });\n        }(m = E(a)) && (c += \"?\" + m);(l = E(l)) && (c += \"#\" + l);p ? (l = k ? k.state : null, m = k ? k.title : null, b.onpopstate(), k && k.replace ? b.history.replaceState(l, m, q.prefix + c) : b.history.pushState(l, m, q.prefix + c)) : b.location.href = q.prefix + c;\n      }, defineRoutes: function defineRoutes(c, k, l) {\n        function a() {\n          var a = q.getPath(),\n              e = {},\n              m = h(a, e, e),\n              p = b.history.state;if (null != p) for (var t in p) {\n            e[t] = p[t];\n          }for (var r in c) {\n            if (p = new RegExp(\"^\" + r.replace(/:[^\\/]+?\\.{3}/g, \"(.*?)\").replace(/:[^\\/]+/g, \"([^\\\\/]+)\") + \"/?$\"), p.test(m)) {\n              m.replace(p, function () {\n                for (var b = r.match(/:[^\\/]+/g) || [], h = [].slice.call(arguments, 1, -2), l = 0; l < b.length; l++) {\n                  e[b[l].replace(/:|\\./g, \"\")] = decodeURIComponent(h[l]);\n                }k(c[r], e, a, r);\n              });return;\n            }\n          }l(a, e);\n        }p ? b.onpopstate = e(a) : \"#\" === q.prefix.charAt(0) && (b.onhashchange = a);a();\n      } };return q;\n  };w.route = function (b, c) {\n    var e = ba(b),\n        h = function h(a) {\n      return a;\n    },\n        p,\n        l,\n        k,\n        q,\n        _t,\n        m = function m(a, b, _m) {\n      function r() {\n        null != p && c.render(a, p(x(l, k.key, k)));\n      }if (null == a) throw Error(\"Ensure the DOM element that was passed to `m.route` is not undefined\");var _z = function z() {\n        r();_z = c.redraw;\n      };c.subscribe(a, r);var w = function w(a) {\n        if (a !== b) e.setPath(b, null, { replace: !0 });else throw Error(\"Could not resolve default route \" + b);\n      };e.defineRoutes(_m, function (a, b, c) {\n        var e = _t = function t(a, m) {\n          e === _t && (l = null == m || \"function\" !== typeof m.view && \"function\" !== typeof m ? \"div\" : m, k = b, q = c, _t = null, p = (a.render || h).bind(a), _z());\n        };a.view || \"function\" === typeof a ? e({}, a) : a.onmatch ? aa.resolve(a.onmatch(b, c)).then(function (b) {\n          e(a, b);\n        }, w) : e(a, \"div\");\n      }, w);\n    };m.set = function (a, b, c) {\n      null != _t && (c = c || {}, c.replace = !0);_t = null;e.setPath(a, b, c);\n    };m.get = function () {\n      return q;\n    };\n    m.prefix = function (a) {\n      e.prefix = a;\n    };var r = function r(a, b) {\n      b.dom.setAttribute(\"href\", e.prefix + b.attrs.href);b.dom.onclick = function (b) {\n        b.ctrlKey || b.metaKey || b.shiftKey || 2 === b.which || (b.preventDefault(), b.redraw = !1, b = this.getAttribute(\"href\"), 0 === b.indexOf(e.prefix) && (b = b.slice(e.prefix.length)), m.set(b, void 0, a));\n      };\n    };m.link = function (a) {\n      return null == a.tag ? r.bind(r, a) : r({}, a);\n    };m.param = function (a) {\n      return \"undefined\" !== typeof k && \"undefined\" !== typeof a ? k[a] : k;\n    };return m;\n  }(window, H);w.withAttr = function (b, c, e) {\n    return function (h) {\n      c.call(e || this, b in h.currentTarget ? h.currentTarget[b] : h.currentTarget.getAttribute(b));\n    };\n  };var ca = V(window);w.render = ca.render;w.redraw = H.redraw;w.request = P.request;w.jsonp = P.jsonp;w.parseQueryString = Q;w.buildQueryString = E;w.version = \"1.1.3\";w.vnode = x;w.PromisePolyfill = _r; true ? module.exports = w : window.m = w;\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./node_modules/timers-browserify/main.js */ 1).setImmediate, __webpack_require__(/*! ./node_modules/webpack/buildin/global.js */ 0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../webpack/buildin/global.js */ 0), __webpack_require__(/*! ./../process/browser.js */ 5)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!******************!*\
  !*** ./anime.js ***!
  \******************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n 2017 Julian Garnier\n Released under the MIT license\n*/\nvar $jscomp = { scope: {} };$jscomp.defineProperty = \"function\" == typeof Object.defineProperties ? Object.defineProperty : function (e, r, p) {\n  if (p.get || p.set) throw new TypeError(\"ES3 does not support getters and setters.\");e != Array.prototype && e != Object.prototype && (e[r] = p.value);\n};$jscomp.getGlobal = function (e) {\n  return \"undefined\" != typeof window && window === e ? e : \"undefined\" != typeof global && null != global ? global : e;\n};$jscomp.global = $jscomp.getGlobal(undefined);$jscomp.SYMBOL_PREFIX = \"jscomp_symbol_\";\n$jscomp.initSymbol = function () {\n  $jscomp.initSymbol = function () {};$jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);\n};$jscomp.symbolCounter_ = 0;$jscomp.Symbol = function (e) {\n  return $jscomp.SYMBOL_PREFIX + (e || \"\") + $jscomp.symbolCounter_++;\n};\n$jscomp.initSymbolIterator = function () {\n  $jscomp.initSymbol();var e = $jscomp.global.Symbol.iterator;e || (e = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol(\"iterator\"));\"function\" != typeof Array.prototype[e] && $jscomp.defineProperty(Array.prototype, e, { configurable: !0, writable: !0, value: function value() {\n      return $jscomp.arrayIterator(this);\n    } });$jscomp.initSymbolIterator = function () {};\n};$jscomp.arrayIterator = function (e) {\n  var r = 0;return $jscomp.iteratorPrototype(function () {\n    return r < e.length ? { done: !1, value: e[r++] } : { done: !0 };\n  });\n};\n$jscomp.iteratorPrototype = function (e) {\n  $jscomp.initSymbolIterator();e = { next: e };e[$jscomp.global.Symbol.iterator] = function () {\n    return this;\n  };return e;\n};$jscomp.array = $jscomp.array || {};$jscomp.iteratorFromArray = function (e, r) {\n  $jscomp.initSymbolIterator();e instanceof String && (e += \"\");var p = 0,\n      m = { next: function next() {\n      if (p < e.length) {\n        var u = p++;return { value: r(u, e[u]), done: !1 };\n      }m.next = function () {\n        return { done: !0, value: void 0 };\n      };return m.next();\n    } };m[Symbol.iterator] = function () {\n    return m;\n  };return m;\n};\n$jscomp.polyfill = function (e, r, p, m) {\n  if (r) {\n    p = $jscomp.global;e = e.split(\".\");for (m = 0; m < e.length - 1; m++) {\n      var u = e[m];u in p || (p[u] = {});p = p[u];\n    }e = e[e.length - 1];m = p[e];r = r(m);r != m && null != r && $jscomp.defineProperty(p, e, { configurable: !0, writable: !0, value: r });\n  }\n};$jscomp.polyfill(\"Array.prototype.keys\", function (e) {\n  return e ? e : function () {\n    return $jscomp.iteratorFromArray(this, function (e) {\n      return e;\n    });\n  };\n}, \"es6-impl\", \"es3\");var $jscomp$this = undefined;\n(function (e, r) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (r),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" === (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) && module.exports ? module.exports = r() : e.anime = r();\n})(undefined, function () {\n  function e(a) {\n    if (!h.col(a)) try {\n      return document.querySelectorAll(a);\n    } catch (c) {}\n  }function r(a, c) {\n    for (var d = a.length, b = 2 <= arguments.length ? arguments[1] : void 0, f = [], n = 0; n < d; n++) {\n      if (n in a) {\n        var k = a[n];c.call(b, k, n, a) && f.push(k);\n      }\n    }return f;\n  }function p(a) {\n    return a.reduce(function (a, d) {\n      return a.concat(h.arr(d) ? p(d) : d);\n    }, []);\n  }function m(a) {\n    if (h.arr(a)) return a;\n    h.str(a) && (a = e(a) || a);return a instanceof NodeList || a instanceof HTMLCollection ? [].slice.call(a) : [a];\n  }function u(a, c) {\n    return a.some(function (a) {\n      return a === c;\n    });\n  }function C(a) {\n    var c = {},\n        d;for (d in a) {\n      c[d] = a[d];\n    }return c;\n  }function D(a, c) {\n    var d = C(a),\n        b;for (b in a) {\n      d[b] = c.hasOwnProperty(b) ? c[b] : a[b];\n    }return d;\n  }function z(a, c) {\n    var d = C(a),\n        b;for (b in c) {\n      d[b] = h.und(a[b]) ? c[b] : a[b];\n    }return d;\n  }function T(a) {\n    a = a.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, function (a, c, d, k) {\n      return c + c + d + d + k + k;\n    });var c = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a);\n    a = parseInt(c[1], 16);var d = parseInt(c[2], 16),\n        c = parseInt(c[3], 16);return \"rgba(\" + a + \",\" + d + \",\" + c + \",1)\";\n  }function U(a) {\n    function c(a, c, b) {\n      0 > b && (b += 1);1 < b && --b;return b < 1 / 6 ? a + 6 * (c - a) * b : .5 > b ? c : b < 2 / 3 ? a + (c - a) * (2 / 3 - b) * 6 : a;\n    }var d = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(a) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(a);a = parseInt(d[1]) / 360;var b = parseInt(d[2]) / 100,\n        f = parseInt(d[3]) / 100,\n        d = d[4] || 1;if (0 == b) f = b = a = f;else {\n      var n = .5 > f ? f * (1 + b) : f + b - f * b,\n          k = 2 * f - n,\n          f = c(k, n, a + 1 / 3),\n          b = c(k, n, a);a = c(k, n, a - 1 / 3);\n    }return \"rgba(\" + 255 * f + \",\" + 255 * b + \",\" + 255 * a + \",\" + d + \")\";\n  }function y(a) {\n    if (a = /([\\+\\-]?[0-9#\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(a)) return a[2];\n  }function V(a) {\n    if (-1 < a.indexOf(\"translate\") || \"perspective\" === a) return \"px\";if (-1 < a.indexOf(\"rotate\") || -1 < a.indexOf(\"skew\")) return \"deg\";\n  }function I(a, c) {\n    return h.fnc(a) ? a(c.target, c.id, c.total) : a;\n  }function E(a, c) {\n    if (c in a.style) return getComputedStyle(a).getPropertyValue(c.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase()) || \"0\";\n  }function J(a, c) {\n    if (h.dom(a) && u(W, c)) return \"transform\";if (h.dom(a) && (a.getAttribute(c) || h.svg(a) && a[c])) return \"attribute\";if (h.dom(a) && \"transform\" !== c && E(a, c)) return \"css\";if (null != a[c]) return \"object\";\n  }function X(a, c) {\n    var d = V(c),\n        d = -1 < c.indexOf(\"scale\") ? 1 : 0 + d;a = a.style.transform;if (!a) return d;for (var b = [], f = [], n = [], k = /(\\w+)\\((.+?)\\)/g; b = k.exec(a);) {\n      f.push(b[1]), n.push(b[2]);\n    }a = r(n, function (a, b) {\n      return f[b] === c;\n    });return a.length ? a[0] : d;\n  }function K(a, c) {\n    switch (J(a, c)) {case \"transform\":\n        return X(a, c);case \"css\":\n        return E(a, c);case \"attribute\":\n        return a.getAttribute(c);}return a[c] || 0;\n  }function L(a, c) {\n    var d = /^(\\*=|\\+=|-=)/.exec(a);if (!d) return a;var b = y(a) || 0;c = parseFloat(c);a = parseFloat(a.replace(d[0], \"\"));switch (d[0][0]) {case \"+\":\n        return c + a + b;case \"-\":\n        return c - a + b;case \"*\":\n        return c * a + b;}\n  }function F(a, c) {\n    return Math.sqrt(Math.pow(c.x - a.x, 2) + Math.pow(c.y - a.y, 2));\n  }function M(a) {\n    a = a.points;for (var c = 0, d, b = 0; b < a.numberOfItems; b++) {\n      var f = a.getItem(b);0 < b && (c += F(d, f));d = f;\n    }return c;\n  }function N(a) {\n    if (a.getTotalLength) return a.getTotalLength();switch (a.tagName.toLowerCase()) {case \"circle\":\n        return 2 * Math.PI * a.getAttribute(\"r\");case \"rect\":\n        return 2 * a.getAttribute(\"width\") + 2 * a.getAttribute(\"height\");case \"line\":\n        return F({ x: a.getAttribute(\"x1\"), y: a.getAttribute(\"y1\") }, { x: a.getAttribute(\"x2\"), y: a.getAttribute(\"y2\") });case \"polyline\":\n        return M(a);case \"polygon\":\n        var c = a.points;return M(a) + F(c.getItem(c.numberOfItems - 1), c.getItem(0));}\n  }function Y(a, c) {\n    function d(b) {\n      b = void 0 === b ? 0 : b;return a.el.getPointAtLength(1 <= c + b ? c + b : 0);\n    }var b = d(),\n        f = d(-1),\n        n = d(1);switch (a.property) {case \"x\":\n        return b.x;case \"y\":\n        return b.y;\n      case \"angle\":\n        return 180 * Math.atan2(n.y - f.y, n.x - f.x) / Math.PI;}\n  }function O(a, c) {\n    var d = /-?\\d*\\.?\\d+/g,\n        b;b = h.pth(a) ? a.totalLength : a;if (h.col(b)) {\n      if (h.rgb(b)) {\n        var f = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(b);b = f ? \"rgba(\" + f[1] + \",1)\" : b;\n      } else b = h.hex(b) ? T(b) : h.hsl(b) ? U(b) : void 0;\n    } else f = (f = y(b)) ? b.substr(0, b.length - f.length) : b, b = c && !/\\s/g.test(b) ? f + c : f;b += \"\";return { original: b, numbers: b.match(d) ? b.match(d).map(Number) : [0], strings: h.str(a) || c ? b.split(d) : [] };\n  }function P(a) {\n    a = a ? p(h.arr(a) ? a.map(m) : m(a)) : [];return r(a, function (a, d, b) {\n      return b.indexOf(a) === d;\n    });\n  }function Z(a) {\n    var c = P(a);return c.map(function (a, b) {\n      return { target: a, id: b, total: c.length };\n    });\n  }function aa(a, c) {\n    var d = C(c);if (h.arr(a)) {\n      var b = a.length;2 !== b || h.obj(a[0]) ? h.fnc(c.duration) || (d.duration = c.duration / b) : a = { value: a };\n    }return m(a).map(function (a, b) {\n      b = b ? 0 : c.delay;a = h.obj(a) && !h.pth(a) ? a : { value: a };h.und(a.delay) && (a.delay = b);return a;\n    }).map(function (a) {\n      return z(a, d);\n    });\n  }function ba(a, c) {\n    var d = {},\n        b;for (b in a) {\n      var f = I(a[b], c);h.arr(f) && (f = f.map(function (a) {\n        return I(a, c);\n      }), 1 === f.length && (f = f[0]));d[b] = f;\n    }d.duration = parseFloat(d.duration);d.delay = parseFloat(d.delay);return d;\n  }function ca(a) {\n    return h.arr(a) ? A.apply(this, a) : Q[a];\n  }function da(a, c) {\n    var d;return a.tweens.map(function (b) {\n      b = ba(b, c);var f = b.value,\n          e = K(c.target, a.name),\n          k = d ? d.to.original : e,\n          k = h.arr(f) ? f[0] : k,\n          w = L(h.arr(f) ? f[1] : f, k),\n          e = y(w) || y(k) || y(e);b.from = O(k, e);b.to = O(w, e);b.start = d ? d.end : a.offset;b.end = b.start + b.delay + b.duration;b.easing = ca(b.easing);b.elasticity = (1E3 - Math.min(Math.max(b.elasticity, 1), 999)) / 1E3;b.isPath = h.pth(f);b.isColor = h.col(b.from.original);b.isColor && (b.round = 1);return d = b;\n    });\n  }function ea(a, c) {\n    return r(p(a.map(function (a) {\n      return c.map(function (b) {\n        var c = J(a.target, b.name);if (c) {\n          var d = da(b, a);b = { type: c, property: b.name, animatable: a, tweens: d, duration: d[d.length - 1].end, delay: d[0].delay };\n        } else b = void 0;return b;\n      });\n    })), function (a) {\n      return !h.und(a);\n    });\n  }function R(a, c, d, b) {\n    var f = \"delay\" === a;return c.length ? (f ? Math.min : Math.max).apply(Math, c.map(function (b) {\n      return b[a];\n    })) : f ? b.delay : d.offset + b.delay + b.duration;\n  }function fa(a) {\n    var c = D(ga, a),\n        d = D(S, a),\n        b = Z(a.targets),\n        f = [],\n        e = z(c, d),\n        k;for (k in a) {\n      e.hasOwnProperty(k) || \"targets\" === k || f.push({ name: k, offset: e.offset, tweens: aa(a[k], d) });\n    }a = ea(b, f);return z(c, { children: [], animatables: b, animations: a, duration: R(\"duration\", a, c, d), delay: R(\"delay\", a, c, d) });\n  }function q(a) {\n    function c() {\n      return window.Promise && new Promise(function (a) {\n        return p = a;\n      });\n    }function d(a) {\n      return g.reversed ? g.duration - a : a;\n    }function b(a) {\n      for (var b = 0, c = {}, d = g.animations, f = d.length; b < f;) {\n        var e = d[b],\n            k = e.animatable,\n            h = e.tweens,\n            n = h.length - 1,\n            l = h[n];n && (l = r(h, function (b) {\n          return a < b.end;\n        })[0] || l);for (var h = Math.min(Math.max(a - l.start - l.delay, 0), l.duration) / l.duration, w = isNaN(h) ? 1 : l.easing(h, l.elasticity), h = l.to.strings, p = l.round, n = [], m = void 0, m = l.to.numbers.length, t = 0; t < m; t++) {\n          var x = void 0,\n              x = l.to.numbers[t],\n              q = l.from.numbers[t],\n              x = l.isPath ? Y(l.value, w * x) : q + w * (x - q);p && (l.isColor && 2 < t || (x = Math.round(x * p) / p));n.push(x);\n        }if (l = h.length) for (m = h[0], w = 0; w < l; w++) {\n          p = h[w + 1], t = n[w], isNaN(t) || (m = p ? m + (t + p) : m + (t + \" \"));\n        } else m = n[0];ha[e.type](k.target, e.property, m, c, k.id);e.currentValue = m;b++;\n      }if (b = Object.keys(c).length) for (d = 0; d < b; d++) {\n        H || (H = E(document.body, \"transform\") ? \"transform\" : \"-webkit-transform\"), g.animatables[d].target.style[H] = c[d].join(\" \");\n      }g.currentTime = a;g.progress = a / g.duration * 100;\n    }function f(a) {\n      if (g[a]) g[a](g);\n    }function e() {\n      g.remaining && !0 !== g.remaining && g.remaining--;\n    }function k(a) {\n      var k = g.duration,\n          n = g.offset,\n          w = n + g.delay,\n          r = g.currentTime,\n          x = g.reversed,\n          q = d(a);if (g.children.length) {\n        var u = g.children,\n            v = u.length;\n        if (q >= g.currentTime) for (var G = 0; G < v; G++) {\n          u[G].seek(q);\n        } else for (; v--;) {\n          u[v].seek(q);\n        }\n      }if (q >= w || !k) g.began || (g.began = !0, f(\"begin\")), f(\"run\");if (q > n && q < k) b(q);else if (q <= n && 0 !== r && (b(0), x && e()), q >= k && r !== k || !k) b(k), x || e();f(\"update\");a >= k && (g.remaining ? (t = h, \"alternate\" === g.direction && (g.reversed = !g.reversed)) : (g.pause(), g.completed || (g.completed = !0, f(\"complete\"), \"Promise\" in window && (p(), m = c()))), l = 0);\n    }a = void 0 === a ? {} : a;var h,\n        t,\n        l = 0,\n        p = null,\n        m = c(),\n        g = fa(a);g.reset = function () {\n      var a = g.direction,\n          c = g.loop;g.currentTime = 0;g.progress = 0;g.paused = !0;g.began = !1;g.completed = !1;g.reversed = \"reverse\" === a;g.remaining = \"alternate\" === a && 1 === c ? 2 : c;b(0);for (a = g.children.length; a--;) {\n        g.children[a].reset();\n      }\n    };g.tick = function (a) {\n      h = a;t || (t = h);k((l + h - t) * q.speed);\n    };g.seek = function (a) {\n      k(d(a));\n    };g.pause = function () {\n      var a = v.indexOf(g);-1 < a && v.splice(a, 1);g.paused = !0;\n    };g.play = function () {\n      g.paused && (g.paused = !1, t = 0, l = d(g.currentTime), v.push(g), B || ia());\n    };g.reverse = function () {\n      g.reversed = !g.reversed;t = 0;l = d(g.currentTime);\n    };g.restart = function () {\n      g.pause();\n      g.reset();g.play();\n    };g.finished = m;g.reset();g.autoplay && g.play();return g;\n  }var ga = { update: void 0, begin: void 0, run: void 0, complete: void 0, loop: 1, direction: \"normal\", autoplay: !0, offset: 0 },\n      S = { duration: 1E3, delay: 0, easing: \"easeOutElastic\", elasticity: 500, round: 0 },\n      W = \"translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective\".split(\" \"),\n      H,\n      h = { arr: function arr(a) {\n      return Array.isArray(a);\n    }, obj: function obj(a) {\n      return -1 < Object.prototype.toString.call(a).indexOf(\"Object\");\n    },\n    pth: function pth(a) {\n      return h.obj(a) && a.hasOwnProperty(\"totalLength\");\n    }, svg: function svg(a) {\n      return a instanceof SVGElement;\n    }, dom: function dom(a) {\n      return a.nodeType || h.svg(a);\n    }, str: function str(a) {\n      return \"string\" === typeof a;\n    }, fnc: function fnc(a) {\n      return \"function\" === typeof a;\n    }, und: function und(a) {\n      return \"undefined\" === typeof a;\n    }, hex: function hex(a) {\n      return (/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a)\n      );\n    }, rgb: function rgb(a) {\n      return (/^rgb/.test(a)\n      );\n    }, hsl: function hsl(a) {\n      return (/^hsl/.test(a)\n      );\n    }, col: function col(a) {\n      return h.hex(a) || h.rgb(a) || h.hsl(a);\n    } },\n      A = function () {\n    function a(a, d, b) {\n      return (((1 - 3 * b + 3 * d) * a + (3 * b - 6 * d)) * a + 3 * d) * a;\n    }return function (c, d, b, f) {\n      if (0 <= c && 1 >= c && 0 <= b && 1 >= b) {\n        var e = new Float32Array(11);if (c !== d || b !== f) for (var k = 0; 11 > k; ++k) {\n          e[k] = a(.1 * k, c, b);\n        }return function (k) {\n          if (c === d && b === f) return k;if (0 === k) return 0;if (1 === k) return 1;for (var h = 0, l = 1; 10 !== l && e[l] <= k; ++l) {\n            h += .1;\n          }--l;var l = h + (k - e[l]) / (e[l + 1] - e[l]) * .1,\n              n = 3 * (1 - 3 * b + 3 * c) * l * l + 2 * (3 * b - 6 * c) * l + 3 * c;if (.001 <= n) {\n            for (h = 0; 4 > h; ++h) {\n              n = 3 * (1 - 3 * b + 3 * c) * l * l + 2 * (3 * b - 6 * c) * l + 3 * c;if (0 === n) break;var m = a(l, c, b) - k,\n                  l = l - m / n;\n            }k = l;\n          } else if (0 === n) k = l;else {\n            var l = h,\n                h = h + .1,\n                g = 0;do {\n              m = l + (h - l) / 2, n = a(m, c, b) - k, 0 < n ? h = m : l = m;\n            } while (1e-7 < Math.abs(n) && 10 > ++g);k = m;\n          }return a(k, d, f);\n        };\n      }\n    };\n  }(),\n      Q = function () {\n    function a(a, b) {\n      return 0 === a || 1 === a ? a : -Math.pow(2, 10 * (a - 1)) * Math.sin(2 * (a - 1 - b / (2 * Math.PI) * Math.asin(1)) * Math.PI / b);\n    }var c = \"Quad Cubic Quart Quint Sine Expo Circ Back Elastic\".split(\" \"),\n        d = { In: [[.55, .085, .68, .53], [.55, .055, .675, .19], [.895, .03, .685, .22], [.755, .05, .855, .06], [.47, 0, .745, .715], [.95, .05, .795, .035], [.6, .04, .98, .335], [.6, -.28, .735, .045], a], Out: [[.25, .46, .45, .94], [.215, .61, .355, 1], [.165, .84, .44, 1], [.23, 1, .32, 1], [.39, .575, .565, 1], [.19, 1, .22, 1], [.075, .82, .165, 1], [.175, .885, .32, 1.275], function (b, c) {\n        return 1 - a(1 - b, c);\n      }], InOut: [[.455, .03, .515, .955], [.645, .045, .355, 1], [.77, 0, .175, 1], [.86, 0, .07, 1], [.445, .05, .55, .95], [1, 0, 0, 1], [.785, .135, .15, .86], [.68, -.55, .265, 1.55], function (b, c) {\n        return .5 > b ? a(2 * b, c) / 2 : 1 - a(-2 * b + 2, c) / 2;\n      }] },\n        b = { linear: A(.25, .25, .75, .75) },\n        f = {},\n        e;for (e in d) {\n      f.type = e, d[f.type].forEach(function (a) {\n        return function (d, f) {\n          b[\"ease\" + a.type + c[f]] = h.fnc(d) ? d : A.apply($jscomp$this, d);\n        };\n      }(f)), f = { type: f.type };\n    }return b;\n  }(),\n      ha = { css: function css(a, c, d) {\n      return a.style[c] = d;\n    }, attribute: function attribute(a, c, d) {\n      return a.setAttribute(c, d);\n    }, object: function object(a, c, d) {\n      return a[c] = d;\n    }, transform: function transform(a, c, d, b, f) {\n      b[f] || (b[f] = []);b[f].push(c + \"(\" + d + \")\");\n    } },\n      v = [],\n      B = 0,\n      ia = function () {\n    function a() {\n      B = requestAnimationFrame(c);\n    }function c(c) {\n      var b = v.length;if (b) {\n        for (var d = 0; d < b;) {\n          v[d] && v[d].tick(c), d++;\n        }a();\n      } else cancelAnimationFrame(B), B = 0;\n    }return a;\n  }();q.version = \"2.2.0\";q.speed = 1;q.running = v;q.remove = function (a) {\n    a = P(a);for (var c = v.length; c--;) {\n      for (var d = v[c], b = d.animations, f = b.length; f--;) {\n        u(a, b[f].animatable.target) && (b.splice(f, 1), b.length || d.pause());\n      }\n    }\n  };q.getValue = K;q.path = function (a, c) {\n    var d = h.str(a) ? e(a)[0] : a,\n        b = c || 100;return function (a) {\n      return { el: d, property: a, totalLength: N(d) * (b / 100) };\n    };\n  };q.setDashoffset = function (a) {\n    var c = N(a);a.setAttribute(\"stroke-dasharray\", c);return c;\n  };q.bezier = A;q.easings = Q;q.timeline = function (a) {\n    var c = q(a);c.pause();c.duration = 0;c.add = function (d) {\n      c.children.forEach(function (a) {\n        a.began = !0;a.completed = !0;\n      });m(d).forEach(function (b) {\n        var d = z(b, D(S, a || {}));d.targets = d.targets || a.targets;b = c.duration;var e = d.offset;d.autoplay = !1;d.direction = c.direction;d.offset = h.und(e) ? b : L(e, b);c.began = !0;c.completed = !0;c.seek(d.offset);d = q(d);d.began = !0;d.completed = !0;d.duration > b && (c.duration = d.duration);c.children.push(d);\n      });c.seek(0);c.reset();c.autoplay && c.restart();return c;\n    };return c;\n  };q.random = function (a, c) {\n    return Math.floor(Math.random() * (c - a + 1)) + a;\n  };return q;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./node_modules/webpack/buildin/global.js */ 0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!*************************************************!*\
  !*** ./node_modules/tippy.js/dist/tippy.all.js ***!
  \*************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n* Tippy.js v2.5.1\n* (c) 2017-2018 atomiks\n* MIT\n*/\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.tippy = factory());\n}(this, (function () { 'use strict';\n\nvar styles = \".tippy-touch{cursor:pointer!important}.tippy-notransition{transition:none!important}.tippy-popper{max-width:350px;-webkit-perspective:700px;perspective:700px;z-index:9999;outline:0;transition-timing-function:cubic-bezier(.165,.84,.44,1);pointer-events:none;line-height:1.4}.tippy-popper[data-html]{max-width:96%;max-width:calc(100% - 20px)}.tippy-popper[x-placement^=top] .tippy-backdrop{border-radius:40% 40% 0 0}.tippy-popper[x-placement^=top] .tippy-roundarrow{bottom:-8px;-webkit-transform-origin:50% 0;transform-origin:50% 0}.tippy-popper[x-placement^=top] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.tippy-popper[x-placement^=top] .tippy-arrow{border-top:7px solid #333;border-right:7px solid transparent;border-left:7px solid transparent;bottom:-7px;margin:0 6px;-webkit-transform-origin:50% 0;transform-origin:50% 0}.tippy-popper[x-placement^=top] .tippy-backdrop{-webkit-transform-origin:0 90%;transform-origin:0 90%}.tippy-popper[x-placement^=top] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(6) translate(-50%,25%);transform:scale(6) translate(-50%,25%);opacity:1}.tippy-popper[x-placement^=top] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(1) translate(-50%,25%);transform:scale(1) translate(-50%,25%);opacity:0}.tippy-popper[x-placement^=top] [data-animation=shift-toward][data-state=visible]{opacity:1;-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateY(-20px);transform:translateY(-20px)}.tippy-popper[x-placement^=top] [data-animation=perspective]{-webkit-transform-origin:bottom;transform-origin:bottom}.tippy-popper[x-placement^=top] [data-animation=perspective][data-state=visible]{opacity:1;-webkit-transform:translateY(-10px) rotateX(0);transform:translateY(-10px) rotateX(0)}.tippy-popper[x-placement^=top] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:translateY(0) rotateX(90deg);transform:translateY(0) rotateX(90deg)}.tippy-popper[x-placement^=top] [data-animation=fade][data-state=visible]{opacity:1;-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=shift-away][data-state=visible]{opacity:1;-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=shift-away][data-state=hidden]{opacity:0;-webkit-transform:translateY(0);transform:translateY(0)}.tippy-popper[x-placement^=top] [data-animation=scale][data-state=visible]{opacity:1;-webkit-transform:translateY(-10px) scale(1);transform:translateY(-10px) scale(1)}.tippy-popper[x-placement^=top] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateY(0) scale(0);transform:translateY(0) scale(0)}.tippy-popper[x-placement^=bottom] .tippy-backdrop{border-radius:0 0 30% 30%}.tippy-popper[x-placement^=bottom] .tippy-roundarrow{top:-8px;-webkit-transform-origin:50% 100%;transform-origin:50% 100%}.tippy-popper[x-placement^=bottom] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(0);transform:rotate(0)}.tippy-popper[x-placement^=bottom] .tippy-arrow{border-bottom:7px solid #333;border-right:7px solid transparent;border-left:7px solid transparent;top:-7px;margin:0 6px;-webkit-transform-origin:50% 100%;transform-origin:50% 100%}.tippy-popper[x-placement^=bottom] .tippy-backdrop{-webkit-transform-origin:0 -90%;transform-origin:0 -90%}.tippy-popper[x-placement^=bottom] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(6) translate(-50%,-125%);transform:scale(6) translate(-50%,-125%);opacity:1}.tippy-popper[x-placement^=bottom] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(1) translate(-50%,-125%);transform:scale(1) translate(-50%,-125%);opacity:0}.tippy-popper[x-placement^=bottom] [data-animation=shift-toward][data-state=visible]{opacity:1;-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateY(20px);transform:translateY(20px)}.tippy-popper[x-placement^=bottom] [data-animation=perspective]{-webkit-transform-origin:top;transform-origin:top}.tippy-popper[x-placement^=bottom] [data-animation=perspective][data-state=visible]{opacity:1;-webkit-transform:translateY(10px) rotateX(0);transform:translateY(10px) rotateX(0)}.tippy-popper[x-placement^=bottom] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:translateY(0) rotateX(-90deg);transform:translateY(0) rotateX(-90deg)}.tippy-popper[x-placement^=bottom] [data-animation=fade][data-state=visible]{opacity:1;-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=shift-away][data-state=visible]{opacity:1;-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=shift-away][data-state=hidden]{opacity:0;-webkit-transform:translateY(0);transform:translateY(0)}.tippy-popper[x-placement^=bottom] [data-animation=scale][data-state=visible]{opacity:1;-webkit-transform:translateY(10px) scale(1);transform:translateY(10px) scale(1)}.tippy-popper[x-placement^=bottom] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateY(0) scale(0);transform:translateY(0) scale(0)}.tippy-popper[x-placement^=left] .tippy-backdrop{border-radius:50% 0 0 50%}.tippy-popper[x-placement^=left] .tippy-roundarrow{right:-16px;-webkit-transform-origin:33.33333333% 50%;transform-origin:33.33333333% 50%}.tippy-popper[x-placement^=left] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.tippy-popper[x-placement^=left] .tippy-arrow{border-left:7px solid #333;border-top:7px solid transparent;border-bottom:7px solid transparent;right:-7px;margin:3px 0;-webkit-transform-origin:0 50%;transform-origin:0 50%}.tippy-popper[x-placement^=left] .tippy-backdrop{-webkit-transform-origin:100% 0;transform-origin:100% 0}.tippy-popper[x-placement^=left] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(6) translate(40%,-50%);transform:scale(6) translate(40%,-50%);opacity:1}.tippy-popper[x-placement^=left] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(1.5) translate(40%,-50%);transform:scale(1.5) translate(40%,-50%);opacity:0}.tippy-popper[x-placement^=left] [data-animation=shift-toward][data-state=visible]{opacity:1;-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateX(-20px);transform:translateX(-20px)}.tippy-popper[x-placement^=left] [data-animation=perspective]{-webkit-transform-origin:right;transform-origin:right}.tippy-popper[x-placement^=left] [data-animation=perspective][data-state=visible]{opacity:1;-webkit-transform:translateX(-10px) rotateY(0);transform:translateX(-10px) rotateY(0)}.tippy-popper[x-placement^=left] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:translateX(0) rotateY(-90deg);transform:translateX(0) rotateY(-90deg)}.tippy-popper[x-placement^=left] [data-animation=fade][data-state=visible]{opacity:1;-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=shift-away][data-state=visible]{opacity:1;-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=shift-away][data-state=hidden]{opacity:0;-webkit-transform:translateX(0);transform:translateX(0)}.tippy-popper[x-placement^=left] [data-animation=scale][data-state=visible]{opacity:1;-webkit-transform:translateX(-10px) scale(1);transform:translateX(-10px) scale(1)}.tippy-popper[x-placement^=left] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateX(0) scale(0);transform:translateX(0) scale(0)}.tippy-popper[x-placement^=right] .tippy-backdrop{border-radius:0 50% 50% 0}.tippy-popper[x-placement^=right] .tippy-roundarrow{left:-16px;-webkit-transform-origin:66.66666666% 50%;transform-origin:66.66666666% 50%}.tippy-popper[x-placement^=right] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.tippy-popper[x-placement^=right] .tippy-arrow{border-right:7px solid #333;border-top:7px solid transparent;border-bottom:7px solid transparent;left:-7px;margin:3px 0;-webkit-transform-origin:100% 50%;transform-origin:100% 50%}.tippy-popper[x-placement^=right] .tippy-backdrop{-webkit-transform-origin:-100% 0;transform-origin:-100% 0}.tippy-popper[x-placement^=right] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(6) translate(-140%,-50%);transform:scale(6) translate(-140%,-50%);opacity:1}.tippy-popper[x-placement^=right] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(1.5) translate(-140%,-50%);transform:scale(1.5) translate(-140%,-50%);opacity:0}.tippy-popper[x-placement^=right] [data-animation=shift-toward][data-state=visible]{opacity:1;-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateX(20px);transform:translateX(20px)}.tippy-popper[x-placement^=right] [data-animation=perspective]{-webkit-transform-origin:left;transform-origin:left}.tippy-popper[x-placement^=right] [data-animation=perspective][data-state=visible]{opacity:1;-webkit-transform:translateX(10px) rotateY(0);transform:translateX(10px) rotateY(0)}.tippy-popper[x-placement^=right] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:translateX(0) rotateY(90deg);transform:translateX(0) rotateY(90deg)}.tippy-popper[x-placement^=right] [data-animation=fade][data-state=visible]{opacity:1;-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=shift-away][data-state=visible]{opacity:1;-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=shift-away][data-state=hidden]{opacity:0;-webkit-transform:translateX(0);transform:translateX(0)}.tippy-popper[x-placement^=right] [data-animation=scale][data-state=visible]{opacity:1;-webkit-transform:translateX(10px) scale(1);transform:translateX(10px) scale(1)}.tippy-popper[x-placement^=right] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateX(0) scale(0);transform:translateX(0) scale(0)}.tippy-tooltip{position:relative;color:#fff;border-radius:4px;font-size:.9rem;padding:.3rem .6rem;text-align:center;will-change:transform;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;background-color:#333}.tippy-tooltip[data-size=small]{padding:.2rem .4rem;font-size:.75rem}.tippy-tooltip[data-size=large]{padding:.4rem .8rem;font-size:1rem}.tippy-tooltip[data-animatefill]{overflow:hidden;background-color:transparent}.tippy-tooltip[data-animatefill] .tippy-content{transition:-webkit-clip-path cubic-bezier(.46,.1,.52,.98);transition:clip-path cubic-bezier(.46,.1,.52,.98);transition:clip-path cubic-bezier(.46,.1,.52,.98),-webkit-clip-path cubic-bezier(.46,.1,.52,.98)}.tippy-tooltip[data-interactive],.tippy-tooltip[data-interactive] path{pointer-events:auto}.tippy-tooltip[data-inertia][data-state=visible]{transition-timing-function:cubic-bezier(.53,2,.36,.85)}.tippy-tooltip[data-inertia][data-state=hidden]{transition-timing-function:ease}.tippy-arrow,.tippy-roundarrow{position:absolute;width:0;height:0}.tippy-roundarrow{width:24px;height:8px;fill:#333;pointer-events:none}.tippy-backdrop{position:absolute;will-change:transform;background-color:#333;border-radius:50%;width:26%;left:50%;top:50%;z-index:-1;transition:all cubic-bezier(.46,.1,.52,.98);-webkit-backface-visibility:hidden;backface-visibility:hidden}.tippy-backdrop:after{content:\\\"\\\";float:left;padding-top:100%}body:not(.tippy-touch) .tippy-tooltip[data-animatefill][data-state=visible] .tippy-content{-webkit-clip-path:ellipse(100% 100% at 50% 50%);clip-path:ellipse(100% 100% at 50% 50%)}body:not(.tippy-touch) .tippy-tooltip[data-animatefill][data-state=hidden] .tippy-content{-webkit-clip-path:ellipse(5% 50% at 50% 50%);clip-path:ellipse(5% 50% at 50% 50%)}body:not(.tippy-touch) .tippy-popper[x-placement=right] .tippy-tooltip[data-animatefill][data-state=visible] .tippy-content{-webkit-clip-path:ellipse(135% 100% at 0 50%);clip-path:ellipse(135% 100% at 0 50%)}body:not(.tippy-touch) .tippy-popper[x-placement=right] .tippy-tooltip[data-animatefill][data-state=hidden] .tippy-content{-webkit-clip-path:ellipse(40% 100% at 0 50%);clip-path:ellipse(40% 100% at 0 50%)}body:not(.tippy-touch) .tippy-popper[x-placement=left] .tippy-tooltip[data-animatefill][data-state=visible] .tippy-content{-webkit-clip-path:ellipse(135% 100% at 100% 50%);clip-path:ellipse(135% 100% at 100% 50%)}body:not(.tippy-touch) .tippy-popper[x-placement=left] .tippy-tooltip[data-animatefill][data-state=hidden] .tippy-content{-webkit-clip-path:ellipse(40% 100% at 100% 50%);clip-path:ellipse(40% 100% at 100% 50%)}@media (max-width:360px){.tippy-popper{max-width:96%;max-width:calc(100% - 20px)}}\";\n\nvar version = \"2.5.1\";\n\nvar isBrowser = typeof window !== 'undefined';\n\nvar isIE = isBrowser && /MSIE |Trident\\//.test(navigator.userAgent);\n\nvar browser = {};\n\nif (isBrowser) {\n  browser.supported = 'requestAnimationFrame' in window;\n  browser.supportsTouch = 'ontouchstart' in window;\n  browser.usingTouch = false;\n  browser.dynamicInputDetection = true;\n  browser.iOS = /iPhone|iPad|iPod/.test(navigator.platform) && !window.MSStream;\n  browser.onUserInputChange = function () {};\n}\n\n/**\n * Selector constants used for grabbing elements\n */\nvar selectors = {\n  POPPER: '.tippy-popper',\n  TOOLTIP: '.tippy-tooltip',\n  CONTENT: '.tippy-content',\n  BACKDROP: '.tippy-backdrop',\n  ARROW: '.tippy-arrow',\n  ROUND_ARROW: '.tippy-roundarrow',\n  REFERENCE: '[data-tippy]'\n};\n\nvar defaults = {\n  placement: 'top',\n  livePlacement: true,\n  trigger: 'mouseenter focus',\n  animation: 'shift-away',\n  html: false,\n  animateFill: true,\n  arrow: false,\n  delay: 0,\n  duration: [350, 300],\n  interactive: false,\n  interactiveBorder: 2,\n  theme: 'dark',\n  size: 'regular',\n  distance: 10,\n  offset: 0,\n  hideOnClick: true,\n  multiple: false,\n  followCursor: false,\n  inertia: false,\n  updateDuration: 350,\n  sticky: false,\n  appendTo: function appendTo() {\n    return document.body;\n  },\n  zIndex: 9999,\n  touchHold: false,\n  performance: false,\n  dynamicTitle: false,\n  flip: true,\n  flipBehavior: 'flip',\n  arrowType: 'sharp',\n  arrowTransform: '',\n  maxWidth: '',\n  target: null,\n  allowTitleHTML: true,\n  popperOptions: {},\n  createPopperInstanceOnInit: false,\n  onShow: function onShow() {},\n  onShown: function onShown() {},\n  onHide: function onHide() {},\n  onHidden: function onHidden() {}\n};\n\n/**\n * The keys of the defaults object for reducing down into a new object\n * Used in `getIndividualOptions()`\n */\nvar defaultsKeys = browser.supported && Object.keys(defaults);\n\n/**\n * Determines if a value is an object literal\n * @param {*} value\n * @return {Boolean}\n */\nfunction isObjectLiteral(value) {\n  return {}.toString.call(value) === '[object Object]';\n}\n\n/**\n * Ponyfill for Array.from\n * @param {*} value\n * @return {Array}\n */\nfunction toArray(value) {\n  return [].slice.call(value);\n}\n\n/**\n * Returns an array of elements based on the selector input\n * @param {String|Element|Element[]|NodeList|Object} selector\n * @return {Element[]}\n */\nfunction getArrayOfElements(selector) {\n  if (selector instanceof Element || isObjectLiteral(selector)) {\n    return [selector];\n  }\n\n  if (selector instanceof NodeList) {\n    return toArray(selector);\n  }\n\n  if (Array.isArray(selector)) {\n    return selector;\n  }\n\n  try {\n    return toArray(document.querySelectorAll(selector));\n  } catch (_) {\n    return [];\n  }\n}\n\n/**\n * Polyfills needed props/methods for a virtual reference object\n * NOTE: in v3.0 this will be pure\n * @param {Object} reference\n */\nfunction polyfillVirtualReferenceProps(reference) {\n  reference.refObj = true;\n  reference.attributes = reference.attributes || {};\n  reference.setAttribute = function (key, val) {\n    reference.attributes[key] = val;\n  };\n  reference.getAttribute = function (key) {\n    return reference.attributes[key];\n  };\n  reference.removeAttribute = function (key) {\n    delete reference.attributes[key];\n  };\n  reference.addEventListener = function () {};\n  reference.removeEventListener = function () {};\n  reference.classList = {\n    classNames: {},\n    add: function add(key) {\n      return reference.classList.classNames[key] = true;\n    },\n    remove: function remove(key) {\n      delete reference.classList.classNames[key];\n      return true;\n    },\n    contains: function contains(key) {\n      return !!reference.classList.classNames[key];\n    }\n  };\n}\n\n/**\n * Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete\n * @param {String} property\n * @return {String} - browser supported prefixed property\n */\nfunction prefix(property) {\n  var prefixes = ['', 'webkit'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var _prefix = prefixes[i];\n    var prefixedProp = _prefix ? _prefix + upperProp : property;\n    if (typeof document.body.style[prefixedProp] !== 'undefined') {\n      return prefixedProp;\n    }\n  }\n\n  return null;\n}\n\n/**\n * Creates a div element\n * @return {Element}\n */\nfunction div() {\n  return document.createElement('div');\n}\n\n/**\n * Creates a popper element then returns it\n * @param {Number} id - the popper id\n * @param {String} title - the tooltip's `title` attribute\n * @param {Object} options - individual options\n * @return {Element} - the popper element\n */\nfunction createPopperElement(id, title, options) {\n  var popper = div();\n  popper.setAttribute('class', 'tippy-popper');\n  popper.setAttribute('role', 'tooltip');\n  popper.setAttribute('id', 'tippy-' + id);\n  popper.style.zIndex = options.zIndex;\n  popper.style.maxWidth = options.maxWidth;\n\n  var tooltip = div();\n  tooltip.setAttribute('class', 'tippy-tooltip');\n  tooltip.setAttribute('data-size', options.size);\n  tooltip.setAttribute('data-animation', options.animation);\n  tooltip.setAttribute('data-state', 'hidden');\n  options.theme.split(' ').forEach(function (t) {\n    tooltip.classList.add(t + '-theme');\n  });\n\n  var content = div();\n  content.setAttribute('class', 'tippy-content');\n\n  if (options.arrow) {\n    var arrow = div();\n    arrow.style[prefix('transform')] = options.arrowTransform;\n\n    if (options.arrowType === 'round') {\n      arrow.classList.add('tippy-roundarrow');\n      arrow.innerHTML = '<svg viewBox=\"0 0 24 8\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 8s2.021-.015 5.253-4.218C9.584 2.051 10.797 1.007 12 1c1.203-.007 2.416 1.035 3.761 2.782C19.012 8.005 21 8 21 8H3z\"/></svg>';\n    } else {\n      arrow.classList.add('tippy-arrow');\n    }\n\n    tooltip.appendChild(arrow);\n  }\n\n  if (options.animateFill) {\n    // Create animateFill circle element for animation\n    tooltip.setAttribute('data-animatefill', '');\n    var backdrop = div();\n    backdrop.classList.add('tippy-backdrop');\n    backdrop.setAttribute('data-state', 'hidden');\n    tooltip.appendChild(backdrop);\n  }\n\n  if (options.inertia) {\n    // Change transition timing function cubic bezier\n    tooltip.setAttribute('data-inertia', '');\n  }\n\n  if (options.interactive) {\n    tooltip.setAttribute('data-interactive', '');\n  }\n\n  var html = options.html;\n  if (html) {\n    var templateId = void 0;\n\n    if (html instanceof Element) {\n      content.appendChild(html);\n      templateId = '#' + (html.id || 'tippy-html-template');\n    } else {\n      // trick linters: https://github.com/atomiks/tippyjs/issues/197\n      content[true && 'innerHTML'] = document.querySelector(html)[true && 'innerHTML'];\n      templateId = html;\n    }\n\n    popper.setAttribute('data-html', '');\n    tooltip.setAttribute('data-template-id', templateId);\n\n    if (options.interactive) {\n      popper.setAttribute('tabindex', '-1');\n    }\n  } else {\n    content[options.allowTitleHTML ? 'innerHTML' : 'textContent'] = title;\n  }\n\n  tooltip.appendChild(content);\n  popper.appendChild(tooltip);\n\n  return popper;\n}\n\n/**\n * Creates a trigger by adding the necessary event listeners to the reference element\n * @param {String} eventType - the custom event specified in the `trigger` setting\n * @param {Element} reference\n * @param {Object} handlers - the handlers for each event\n * @param {Object} options\n * @return {Array} - array of listener objects\n */\nfunction createTrigger(eventType, reference, handlers, options) {\n  var onTrigger = handlers.onTrigger,\n      onMouseLeave = handlers.onMouseLeave,\n      onBlur = handlers.onBlur,\n      onDelegateShow = handlers.onDelegateShow,\n      onDelegateHide = handlers.onDelegateHide;\n\n  var listeners = [];\n\n  if (eventType === 'manual') return listeners;\n\n  var on = function on(eventType, handler) {\n    reference.addEventListener(eventType, handler);\n    listeners.push({ event: eventType, handler: handler });\n  };\n\n  if (!options.target) {\n    on(eventType, onTrigger);\n\n    if (browser.supportsTouch && options.touchHold) {\n      on('touchstart', onTrigger);\n      on('touchend', onMouseLeave);\n    }\n    if (eventType === 'mouseenter') {\n      on('mouseleave', onMouseLeave);\n    }\n    if (eventType === 'focus') {\n      on(isIE ? 'focusout' : 'blur', onBlur);\n    }\n  } else {\n    if (browser.supportsTouch && options.touchHold) {\n      on('touchstart', onDelegateShow);\n      on('touchend', onDelegateHide);\n    }\n    if (eventType === 'mouseenter') {\n      on('mouseover', onDelegateShow);\n      on('mouseout', onDelegateHide);\n    }\n    if (eventType === 'focus') {\n      on('focusin', onDelegateShow);\n      on('focusout', onDelegateHide);\n    }\n    if (eventType === 'click') {\n      on('click', onDelegateShow);\n    }\n  }\n\n  return listeners;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Returns an object of settings to override global settings\n * @param {Element} reference\n * @param {Object} instanceOptions\n * @return {Object} - individual options\n */\nfunction getIndividualOptions(reference, instanceOptions) {\n  var options = defaultsKeys.reduce(function (acc, key) {\n    var val = reference.getAttribute('data-tippy-' + key.toLowerCase()) || instanceOptions[key];\n\n    // Convert strings to booleans\n    if (val === 'false') val = false;\n    if (val === 'true') val = true;\n\n    // Convert number strings to true numbers\n    if (isFinite(val) && !isNaN(parseFloat(val))) {\n      val = parseFloat(val);\n    }\n\n    // Convert array strings to actual arrays\n    if (key !== 'target' && typeof val === 'string' && val.trim().charAt(0) === '[') {\n      val = JSON.parse(val);\n    }\n\n    acc[key] = val;\n\n    return acc;\n  }, {});\n\n  return _extends({}, instanceOptions, options);\n}\n\n/**\n * Evaluates/modifies the options object for appropriate behavior\n * @param {Element|Object} reference\n * @param {Object} options\n * @return {Object} modified/evaluated options\n */\nfunction evaluateOptions(reference, options) {\n  // animateFill is disabled if an arrow is true\n  if (options.arrow) {\n    options.animateFill = false;\n  }\n\n  if (options.appendTo && typeof options.appendTo === 'function') {\n    options.appendTo = options.appendTo();\n  }\n\n  if (typeof options.html === 'function') {\n    options.html = options.html(reference);\n  }\n\n  return options;\n}\n\n/**\n * Returns inner elements of the popper element\n * @param {Element} popper\n * @return {Object}\n */\nfunction getInnerElements(popper) {\n  var select = function select(s) {\n    return popper.querySelector(s);\n  };\n  return {\n    tooltip: select(selectors.TOOLTIP),\n    backdrop: select(selectors.BACKDROP),\n    content: select(selectors.CONTENT),\n    arrow: select(selectors.ARROW) || select(selectors.ROUND_ARROW)\n  };\n}\n\n/**\n * Removes the title from an element, setting `data-original-title`\n * appropriately\n * @param {Element} el\n */\nfunction removeTitle(el) {\n  var title = el.getAttribute('title');\n  // Only set `data-original-title` attr if there is a title\n  if (title) {\n    el.setAttribute('data-original-title', title);\n  }\n  el.removeAttribute('title');\n}\n\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser$1 = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser$1 && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser$1 && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser$1 && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser$1 && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE$1(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE$1(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE$1(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE$1(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck$1 = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty$1 = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends$1 = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends$1({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE$1(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE$1(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE$1()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends$1({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends$1({}, attributes, data.attributes);\n  data.styles = _extends$1({}, styles, data.styles);\n  data.arrowStyles = _extends$1({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty$1(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty$1(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends$1({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty$1({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty$1({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends$1({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty$1({}, side, reference[side]),\n      end: defineProperty$1({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends$1({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck$1(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends$1({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends$1({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends$1({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends$1({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass$1(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\n/**\n * Triggers document reflow.\n * Use void because some minifiers or engines think simply accessing the property\n * is unnecessary.\n * @param {Element} popper\n */\nfunction reflow(popper) {\n  void popper.offsetHeight;\n}\n\n/**\n * Wrapper util for popper position updating.\n * Updates the popper's position and invokes the callback on update.\n * Hackish workaround until Popper 2.0's update() becomes sync.\n * @param {Popper} popperInstance\n * @param {Function} callback: to run once popper's position was updated\n * @param {Boolean} updateAlreadyCalled: was scheduleUpdate() already called?\n */\nfunction updatePopperPosition(popperInstance, callback, updateAlreadyCalled) {\n  var popper = popperInstance.popper,\n      options = popperInstance.options;\n\n  var onCreate = options.onCreate;\n  var onUpdate = options.onUpdate;\n\n  options.onCreate = options.onUpdate = function () {\n    reflow(popper), callback && callback(), onUpdate();\n    options.onCreate = onCreate;\n    options.onUpdate = onUpdate;\n  };\n\n  if (!updateAlreadyCalled) {\n    popperInstance.scheduleUpdate();\n  }\n}\n\n/**\n * Returns the core placement ('top', 'bottom', 'left', 'right') of a popper\n * @param {Element} popper\n * @return {String}\n */\nfunction getPopperPlacement(popper) {\n  return popper.getAttribute('x-placement').replace(/-.+/, '');\n}\n\n/**\n * Determines if the mouse's cursor is outside the interactive border\n * @param {MouseEvent} event\n * @param {Element} popper\n * @param {Object} options\n * @return {Boolean}\n */\nfunction cursorIsOutsideInteractiveBorder(event, popper, options) {\n  if (!popper.getAttribute('x-placement')) return true;\n\n  var x = event.clientX,\n      y = event.clientY;\n  var interactiveBorder = options.interactiveBorder,\n      distance = options.distance;\n\n\n  var rect = popper.getBoundingClientRect();\n  var placement = getPopperPlacement(popper);\n  var borderWithDistance = interactiveBorder + distance;\n\n  var exceeds = {\n    top: rect.top - y > interactiveBorder,\n    bottom: y - rect.bottom > interactiveBorder,\n    left: rect.left - x > interactiveBorder,\n    right: x - rect.right > interactiveBorder\n  };\n\n  switch (placement) {\n    case 'top':\n      exceeds.top = rect.top - y > borderWithDistance;\n      break;\n    case 'bottom':\n      exceeds.bottom = y - rect.bottom > borderWithDistance;\n      break;\n    case 'left':\n      exceeds.left = rect.left - x > borderWithDistance;\n      break;\n    case 'right':\n      exceeds.right = x - rect.right > borderWithDistance;\n      break;\n  }\n\n  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;\n}\n\n/**\n * Transforms the `arrowTransform` numbers based on the placement axis\n * @param {String} type 'scale' or 'translate'\n * @param {Number[]} numbers\n * @param {Boolean} isVertical\n * @param {Boolean} isReverse\n * @return {String}\n */\nfunction transformNumbersBasedOnPlacementAxis(type, numbers, isVertical, isReverse) {\n  if (!numbers.length) return '';\n\n  var transforms = {\n    scale: function () {\n      if (numbers.length === 1) {\n        return '' + numbers[0];\n      } else {\n        return isVertical ? numbers[0] + ', ' + numbers[1] : numbers[1] + ', ' + numbers[0];\n      }\n    }(),\n    translate: function () {\n      if (numbers.length === 1) {\n        return isReverse ? -numbers[0] + 'px' : numbers[0] + 'px';\n      } else {\n        if (isVertical) {\n          return isReverse ? numbers[0] + 'px, ' + -numbers[1] + 'px' : numbers[0] + 'px, ' + numbers[1] + 'px';\n        } else {\n          return isReverse ? -numbers[1] + 'px, ' + numbers[0] + 'px' : numbers[1] + 'px, ' + numbers[0] + 'px';\n        }\n      }\n    }()\n  };\n\n  return transforms[type];\n}\n\n/**\n * Transforms the `arrowTransform` x or y axis based on the placement axis\n * @param {String} axis 'X', 'Y', ''\n * @param {Boolean} isVertical\n * @return {String}\n */\nfunction transformAxis(axis, isVertical) {\n  if (!axis) return '';\n  var map = {\n    X: 'Y',\n    Y: 'X'\n  };\n  return isVertical ? axis : map[axis];\n}\n\n/**\n * Computes and applies the necessary arrow transform\n * @param {Element} popper\n * @param {Element} arrow\n * @param {String} arrowTransform\n */\nfunction computeArrowTransform(popper, arrow, arrowTransform) {\n  var placement = getPopperPlacement(popper);\n  var isVertical = placement === 'top' || placement === 'bottom';\n  var isReverse = placement === 'right' || placement === 'bottom';\n\n  var getAxis = function getAxis(re) {\n    var match = arrowTransform.match(re);\n    return match ? match[1] : '';\n  };\n\n  var getNumbers = function getNumbers(re) {\n    var match = arrowTransform.match(re);\n    return match ? match[1].split(',').map(parseFloat) : [];\n  };\n\n  var re = {\n    translate: /translateX?Y?\\(([^)]+)\\)/,\n    scale: /scaleX?Y?\\(([^)]+)\\)/\n  };\n\n  var matches = {\n    translate: {\n      axis: getAxis(/translate([XY])/),\n      numbers: getNumbers(re.translate)\n    },\n    scale: {\n      axis: getAxis(/scale([XY])/),\n      numbers: getNumbers(re.scale)\n    }\n  };\n\n  var computedTransform = arrowTransform.replace(re.translate, 'translate' + transformAxis(matches.translate.axis, isVertical) + '(' + transformNumbersBasedOnPlacementAxis('translate', matches.translate.numbers, isVertical, isReverse) + ')').replace(re.scale, 'scale' + transformAxis(matches.scale.axis, isVertical) + '(' + transformNumbersBasedOnPlacementAxis('scale', matches.scale.numbers, isVertical, isReverse) + ')');\n\n  arrow.style[prefix('transform')] = computedTransform;\n}\n\n/**\n * Returns the distance taking into account the default distance due to\n * the transform: translate setting in CSS\n * @param {Number} distance\n * @return {String}\n */\nfunction getOffsetDistanceInPx(distance) {\n  return -(distance - defaults.distance) + 'px';\n}\n\n/**\n * Waits until next repaint to execute a fn\n * @param {Function} fn\n */\nfunction defer(fn) {\n  requestAnimationFrame(function () {\n    setTimeout(fn, 1);\n  });\n}\n\nvar matches = {};\n\nif (isBrowser) {\n  var e = Element.prototype;\n  matches = e.matches || e.matchesSelector || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s);\n    var i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this) {} // eslint-disable-line no-empty\n    return i > -1;\n  };\n}\n\nvar matches$1 = matches;\n\n/**\n * Ponyfill to get the closest parent element\n * @param {Element} element - child of parent to be returned\n * @param {String} parentSelector - selector to match the parent if found\n * @return {Element}\n */\nfunction closest(element, parentSelector) {\n  var fn = Element.prototype.closest || function (selector) {\n    var el = this;\n    while (el) {\n      if (matches$1.call(el, selector)) {\n        return el;\n      }\n      el = el.parentElement;\n    }\n  };\n\n  return fn.call(element, parentSelector);\n}\n\n/**\n * Returns the value taking into account the value being either a number or array\n * @param {Number|Array} value\n * @param {Number} index\n * @return {Number}\n */\nfunction getValue(value, index) {\n  return Array.isArray(value) ? value[index] : value;\n}\n\n/**\n * Sets the visibility state of an element for transition to begin\n * @param {Element[]} els - array of elements\n * @param {String} type - 'visible' or 'hidden'\n */\nfunction setVisibilityState(els, type) {\n  els.forEach(function (el) {\n    if (!el) return;\n    el.setAttribute('data-state', type);\n  });\n}\n\n/**\n * Sets the transition property to each element\n * @param {Element[]} els - Array of elements\n * @param {String} value\n */\nfunction applyTransitionDuration(els, value) {\n  els.filter(Boolean).forEach(function (el) {\n    el.style[prefix('transitionDuration')] = value + 'ms';\n  });\n}\n\n/**\n * Focuses an element while preventing a scroll jump if it's not entirely within the viewport\n * @param {Element} el\n */\nfunction focus(el) {\n  var x = window.scrollX || window.pageXOffset;\n  var y = window.scrollY || window.pageYOffset;\n  el.focus();\n  scroll(x, y);\n}\n\nvar key = {};\nvar store = function store(data) {\n  return function (k) {\n    return k === key && data;\n  };\n};\n\nvar Tippy = function () {\n  function Tippy(config) {\n    classCallCheck(this, Tippy);\n\n    for (var _key in config) {\n      this[_key] = config[_key];\n    }\n\n    this.state = {\n      destroyed: false,\n      visible: false,\n      enabled: true\n    };\n\n    this._ = store({\n      mutationObservers: []\n    });\n  }\n\n  /**\n   * Enables the tooltip to allow it to show or hide\n   * @memberof Tippy\n   * @public\n   */\n\n\n  createClass(Tippy, [{\n    key: 'enable',\n    value: function enable() {\n      this.state.enabled = true;\n    }\n\n    /**\n     * Disables the tooltip from showing or hiding, but does not destroy it\n     * @memberof Tippy\n     * @public\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.state.enabled = false;\n    }\n\n    /**\n     * Shows the tooltip\n     * @param {Number} duration in milliseconds\n     * @memberof Tippy\n     * @public\n     */\n\n  }, {\n    key: 'show',\n    value: function show(duration) {\n      var _this = this;\n\n      if (this.state.destroyed || !this.state.enabled) return;\n\n      var popper = this.popper,\n          reference = this.reference,\n          options = this.options;\n\n      var _getInnerElements = getInnerElements(popper),\n          tooltip = _getInnerElements.tooltip,\n          backdrop = _getInnerElements.backdrop,\n          content = _getInnerElements.content;\n\n      // If the `dynamicTitle` option is true, the instance is allowed\n      // to be created with an empty title. Make sure that the tooltip\n      // content is not empty before showing it\n\n\n      if (options.dynamicTitle && !reference.getAttribute('data-original-title')) return;\n\n      // Do not show tooltip if reference contains 'disabled' attribute. FF fix for #221\n      if (reference.hasAttribute('disabled')) return;\n\n      // Destroy tooltip if the reference element is no longer on the DOM\n      if (!reference.refObj && !document.documentElement.contains(reference)) {\n        this.destroy();\n        return;\n      }\n\n      options.onShow.call(popper, this);\n\n      duration = getValue(duration !== undefined ? duration : options.duration, 0);\n\n      // Prevent a transition when popper changes position\n      applyTransitionDuration([popper, tooltip, backdrop], 0);\n\n      popper.style.visibility = 'visible';\n      this.state.visible = true;\n\n      _mount.call(this, function () {\n        if (!_this.state.visible) return;\n\n        if (!_hasFollowCursorBehavior.call(_this)) {\n          // FIX: Arrow will sometimes not be positioned correctly. Force another update.\n          _this.popperInstance.scheduleUpdate();\n        }\n\n        // Set initial position near the cursor\n        if (_hasFollowCursorBehavior.call(_this)) {\n          _this.popperInstance.disableEventListeners();\n          var delay = getValue(options.delay, 0);\n          var lastTriggerEvent = _this._(key).lastTriggerEvent;\n          if (lastTriggerEvent) {\n            _this._(key).followCursorListener(delay && _this._(key).lastMouseMoveEvent ? _this._(key).lastMouseMoveEvent : lastTriggerEvent);\n          }\n        }\n\n        // Re-apply transition durations\n        applyTransitionDuration([tooltip, backdrop, backdrop ? content : null], duration);\n\n        if (backdrop) {\n          getComputedStyle(backdrop)[prefix('transform')];\n        }\n\n        if (options.interactive) {\n          reference.classList.add('tippy-active');\n        }\n\n        if (options.sticky) {\n          _makeSticky.call(_this);\n        }\n\n        setVisibilityState([tooltip, backdrop], 'visible');\n\n        _onTransitionEnd.call(_this, duration, function () {\n          if (!options.updateDuration) {\n            tooltip.classList.add('tippy-notransition');\n          }\n\n          if (options.interactive) {\n            focus(popper);\n          }\n\n          reference.setAttribute('aria-describedby', 'tippy-' + _this.id);\n\n          options.onShown.call(popper, _this);\n        });\n      });\n    }\n\n    /**\n     * Hides the tooltip\n     * @param {Number} duration in milliseconds\n     * @memberof Tippy\n     * @public\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(duration) {\n      var _this2 = this;\n\n      if (this.state.destroyed || !this.state.enabled) return;\n\n      var popper = this.popper,\n          reference = this.reference,\n          options = this.options;\n\n      var _getInnerElements2 = getInnerElements(popper),\n          tooltip = _getInnerElements2.tooltip,\n          backdrop = _getInnerElements2.backdrop,\n          content = _getInnerElements2.content;\n\n      options.onHide.call(popper, this);\n\n      duration = getValue(duration !== undefined ? duration : options.duration, 1);\n\n      if (!options.updateDuration) {\n        tooltip.classList.remove('tippy-notransition');\n      }\n\n      if (options.interactive) {\n        reference.classList.remove('tippy-active');\n      }\n\n      popper.style.visibility = 'hidden';\n      this.state.visible = false;\n\n      applyTransitionDuration([tooltip, backdrop, backdrop ? content : null], duration);\n\n      setVisibilityState([tooltip, backdrop], 'hidden');\n\n      if (options.interactive && options.trigger.indexOf('click') > -1) {\n        focus(reference);\n      }\n\n      this.popperInstance.disableEventListeners();\n\n      /*\n      * This call is deferred because sometimes when the tooltip is still transitioning in but hide()\n      * is called before it finishes, the CSS transition won't reverse quickly enough, meaning\n      * the CSS transition will finish 1-2 frames later, and onHidden() will run since the JS set it\n      * more quickly. It should actually be onShown(). Seems to be something Chrome does, not Safari\n      */\n      defer(function () {\n        _onTransitionEnd.call(_this2, duration, function () {\n          if (_this2.state.visible || !options.appendTo.contains(popper)) return;\n\n          if (!_this2._(key).isPreparingToShow) {\n            document.removeEventListener('mousemove', _this2._(key).followCursorListener);\n            _this2._(key).lastMouseMoveEvent = null;\n          }\n\n          reference.removeAttribute('aria-describedby');\n\n          options.appendTo.removeChild(popper);\n\n          options.onHidden.call(popper, _this2);\n        });\n      });\n    }\n\n    /**\n     * Destroys the tooltip instance\n     * @param {Boolean} destroyTargetInstances - relevant only when destroying delegates\n     * @memberof Tippy\n     * @public\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this3 = this;\n\n      var destroyTargetInstances = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (this.state.destroyed) return;\n\n      // Ensure the popper is hidden\n      if (this.state.visible) {\n        this.hide(0);\n      }\n\n      this.listeners.forEach(function (listener) {\n        _this3.reference.removeEventListener(listener.event, listener.handler);\n      });\n\n      // Restore title\n      if (this.title) {\n        this.reference.setAttribute('title', this.title);\n      }\n\n      delete this.reference._tippy;\n\n      var attributes = ['data-original-title', 'data-tippy', 'data-tippy-delegate'];\n      attributes.forEach(function (attr) {\n        _this3.reference.removeAttribute(attr);\n      });\n\n      if (this.options.target && destroyTargetInstances) {\n        toArray(this.reference.querySelectorAll(this.options.target)).forEach(function (child) {\n          return child._tippy && child._tippy.destroy();\n        });\n      }\n\n      if (this.popperInstance) {\n        this.popperInstance.destroy();\n      }\n\n      this._(key).mutationObservers.forEach(function (observer) {\n        observer.disconnect();\n      });\n\n      this.state.destroyed = true;\n    }\n  }]);\n  return Tippy;\n}();\n\n/**\n * ------------------------------------------------------------------------\n * Private methods\n * ------------------------------------------------------------------------\n * Standalone functions to be called with the instance's `this` context to make\n * them truly private and not accessible on the prototype\n */\n\n/**\n * Determines if the tooltip instance has followCursor behavior\n * @return {Boolean}\n * @memberof Tippy\n * @private\n */\nfunction _hasFollowCursorBehavior() {\n  var lastTriggerEvent = this._(key).lastTriggerEvent;\n  return this.options.followCursor && !browser.usingTouch && lastTriggerEvent && lastTriggerEvent.type !== 'focus';\n}\n\n/**\n * Creates the Tippy instance for the child target of the delegate container\n * @param {Event} event\n * @memberof Tippy\n * @private\n */\nfunction _createDelegateChildTippy(event) {\n  var targetEl = closest(event.target, this.options.target);\n  if (targetEl && !targetEl._tippy) {\n    var title = targetEl.getAttribute('title') || this.title;\n    if (title) {\n      targetEl.setAttribute('title', title);\n      tippy(targetEl, _extends({}, this.options, { target: null }));\n      _enter.call(targetEl._tippy, event);\n    }\n  }\n}\n\n/**\n * Method used by event listeners to invoke the show method, taking into account delays and\n * the `wait` option\n * @param {Event} event\n * @memberof Tippy\n * @private\n */\nfunction _enter(event) {\n  var _this4 = this;\n\n  var options = this.options;\n\n\n  _clearDelayTimeouts.call(this);\n\n  if (this.state.visible) return;\n\n  // Is a delegate, create Tippy instance for the child target\n  if (options.target) {\n    _createDelegateChildTippy.call(this, event);\n    return;\n  }\n\n  this._(key).isPreparingToShow = true;\n\n  if (options.wait) {\n    options.wait.call(this.popper, this.show.bind(this), event);\n    return;\n  }\n\n  // If the tooltip has a delay, we need to be listening to the mousemove as soon as the trigger\n  // event is fired so that it's in the correct position upon mount.\n  if (_hasFollowCursorBehavior.call(this)) {\n    if (!this._(key).followCursorListener) {\n      _setFollowCursorListener.call(this);\n    }\n\n    var _getInnerElements3 = getInnerElements(this.popper),\n        arrow = _getInnerElements3.arrow;\n\n    if (arrow) arrow.style.margin = '0';\n    document.addEventListener('mousemove', this._(key).followCursorListener);\n  }\n\n  var delay = getValue(options.delay, 0);\n\n  if (delay) {\n    this._(key).showTimeout = setTimeout(function () {\n      _this4.show();\n    }, delay);\n  } else {\n    this.show();\n  }\n}\n\n/**\n * Method used by event listeners to invoke the hide method, taking into account delays\n * @memberof Tippy\n * @private\n */\nfunction _leave() {\n  var _this5 = this;\n\n  _clearDelayTimeouts.call(this);\n\n  if (!this.state.visible) return;\n\n  this._(key).isPreparingToShow = false;\n\n  var delay = getValue(this.options.delay, 1);\n\n  if (delay) {\n    this._(key).hideTimeout = setTimeout(function () {\n      if (_this5.state.visible) {\n        _this5.hide();\n      }\n    }, delay);\n  } else {\n    this.hide();\n  }\n}\n\n/**\n * Returns relevant listeners for the instance\n * @return {Object} of listeners\n * @memberof Tippy\n * @private\n */\nfunction _getEventListeners() {\n  var _this6 = this;\n\n  var onTrigger = function onTrigger(event) {\n    if (!_this6.state.enabled) return;\n\n    var shouldStopEvent = browser.supportsTouch && browser.usingTouch && ['mouseenter', 'mouseover', 'focus'].indexOf(event.type) > -1;\n\n    if (shouldStopEvent && _this6.options.touchHold) return;\n\n    _this6._(key).lastTriggerEvent = event;\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    if (event.type === 'click' && _this6.options.hideOnClick !== 'persistent' && _this6.state.visible) {\n      _leave.call(_this6);\n    } else {\n      _enter.call(_this6, event);\n    }\n\n    // iOS prevents click events from firing\n    if (shouldStopEvent && browser.iOS && _this6.reference.click) {\n      _this6.reference.click();\n    }\n  };\n\n  var onMouseLeave = function onMouseLeave(event) {\n    if (['mouseleave', 'mouseout'].indexOf(event.type) > -1 && browser.supportsTouch && browser.usingTouch && _this6.options.touchHold) return;\n\n    if (_this6.options.interactive) {\n      var hide = _leave.bind(_this6);\n\n      var onMouseMove = function onMouseMove(event) {\n        var referenceCursorIsOver = closest(event.target, selectors.REFERENCE);\n        var cursorIsOverPopper = closest(event.target, selectors.POPPER) === _this6.popper;\n        var cursorIsOverReference = referenceCursorIsOver === _this6.reference;\n\n        if (cursorIsOverPopper || cursorIsOverReference) return;\n\n        if (cursorIsOutsideInteractiveBorder(event, _this6.popper, _this6.options)) {\n          document.body.removeEventListener('mouseleave', hide);\n          document.removeEventListener('mousemove', onMouseMove);\n\n          _leave.call(_this6, onMouseMove);\n        }\n      };\n\n      document.body.addEventListener('mouseleave', hide);\n      document.addEventListener('mousemove', onMouseMove);\n      return;\n    }\n\n    _leave.call(_this6);\n  };\n\n  var onBlur = function onBlur(event) {\n    if (event.target !== _this6.reference || browser.usingTouch) return;\n\n    if (_this6.options.interactive) {\n      if (!event.relatedTarget) return;\n      if (closest(event.relatedTarget, selectors.POPPER)) return;\n    }\n\n    _leave.call(_this6);\n  };\n\n  var onDelegateShow = function onDelegateShow(event) {\n    if (closest(event.target, _this6.options.target)) {\n      _enter.call(_this6, event);\n    }\n  };\n\n  var onDelegateHide = function onDelegateHide(event) {\n    if (closest(event.target, _this6.options.target)) {\n      _leave.call(_this6);\n    }\n  };\n\n  return {\n    onTrigger: onTrigger,\n    onMouseLeave: onMouseLeave,\n    onBlur: onBlur,\n    onDelegateShow: onDelegateShow,\n    onDelegateHide: onDelegateHide\n  };\n}\n\n/**\n * Creates and returns a new popper instance\n * @return {Popper}\n * @memberof Tippy\n * @private\n */\nfunction _createPopperInstance() {\n  var _this7 = this;\n\n  var popper = this.popper,\n      reference = this.reference,\n      options = this.options;\n\n  var _getInnerElements4 = getInnerElements(popper),\n      tooltip = _getInnerElements4.tooltip;\n\n  var popperOptions = options.popperOptions;\n\n  var arrowSelector = options.arrowType === 'round' ? selectors.ROUND_ARROW : selectors.ARROW;\n  var arrow = tooltip.querySelector(arrowSelector);\n\n  var config = _extends({\n    placement: options.placement\n  }, popperOptions || {}, {\n    modifiers: _extends({}, popperOptions ? popperOptions.modifiers : {}, {\n      arrow: _extends({\n        element: arrowSelector\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.arrow : {}),\n      flip: _extends({\n        enabled: options.flip,\n        padding: options.distance + 5 /* 5px from viewport boundary */\n        , behavior: options.flipBehavior\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),\n      offset: _extends({\n        offset: options.offset\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})\n    }),\n    onCreate: function onCreate() {\n      tooltip.style[getPopperPlacement(popper)] = getOffsetDistanceInPx(options.distance);\n\n      if (arrow && options.arrowTransform) {\n        computeArrowTransform(popper, arrow, options.arrowTransform);\n      }\n    },\n    onUpdate: function onUpdate() {\n      var styles = tooltip.style;\n      styles.top = '';\n      styles.bottom = '';\n      styles.left = '';\n      styles.right = '';\n      styles[getPopperPlacement(popper)] = getOffsetDistanceInPx(options.distance);\n\n      if (arrow && options.arrowTransform) {\n        computeArrowTransform(popper, arrow, options.arrowTransform);\n      }\n    }\n  });\n\n  _addMutationObserver.call(this, {\n    target: popper,\n    callback: function callback() {\n      _this7.popperInstance.update();\n    },\n    options: {\n      childList: true,\n      subtree: true,\n      characterData: true\n    }\n  });\n\n  return new Popper(reference, popper, config);\n}\n\n/**\n * Appends the popper element to the DOM, updating or creating the popper instance\n * @param {Function} callback\n * @memberof Tippy\n * @private\n */\nfunction _mount(callback) {\n  var options = this.options;\n\n\n  if (!this.popperInstance) {\n    this.popperInstance = _createPopperInstance.call(this);\n    if (!options.livePlacement) {\n      this.popperInstance.disableEventListeners();\n    }\n  } else {\n    this.popperInstance.scheduleUpdate();\n    if (options.livePlacement && !_hasFollowCursorBehavior.call(this)) {\n      this.popperInstance.enableEventListeners();\n    }\n  }\n\n  // If the instance previously had followCursor behavior, it will be positioned incorrectly\n  // if triggered by `focus` afterwards - update the reference back to the real DOM element\n  if (!_hasFollowCursorBehavior.call(this)) {\n    var _getInnerElements5 = getInnerElements(this.popper),\n        arrow = _getInnerElements5.arrow;\n\n    if (arrow) arrow.style.margin = '';\n    this.popperInstance.reference = this.reference;\n  }\n\n  updatePopperPosition(this.popperInstance, callback, true);\n\n  if (!options.appendTo.contains(this.popper)) {\n    options.appendTo.appendChild(this.popper);\n  }\n}\n\n/**\n * Clears the show and hide delay timeouts\n * @memberof Tippy\n * @private\n */\nfunction _clearDelayTimeouts() {\n  var _ref = this._(key),\n      showTimeout = _ref.showTimeout,\n      hideTimeout = _ref.hideTimeout;\n\n  clearTimeout(showTimeout);\n  clearTimeout(hideTimeout);\n}\n\n/**\n * Sets the mousemove event listener function for `followCursor` option\n * @memberof Tippy\n * @private\n */\nfunction _setFollowCursorListener() {\n  var _this8 = this;\n\n  this._(key).followCursorListener = function (event) {\n    var _$lastMouseMoveEvent = _this8._(key).lastMouseMoveEvent = event,\n        clientX = _$lastMouseMoveEvent.clientX,\n        clientY = _$lastMouseMoveEvent.clientY;\n\n    if (!_this8.popperInstance) return;\n\n    _this8.popperInstance.reference = {\n      getBoundingClientRect: function getBoundingClientRect() {\n        return {\n          width: 0,\n          height: 0,\n          top: clientY,\n          left: clientX,\n          right: clientX,\n          bottom: clientY\n        };\n      },\n      clientWidth: 0,\n      clientHeight: 0\n    };\n\n    _this8.popperInstance.scheduleUpdate();\n  };\n}\n\n/**\n * Updates the popper's position on each animation frame\n * @memberof Tippy\n * @private\n */\nfunction _makeSticky() {\n  var _this9 = this;\n\n  var applyTransitionDuration$$1 = function applyTransitionDuration$$1() {\n    _this9.popper.style[prefix('transitionDuration')] = _this9.options.updateDuration + 'ms';\n  };\n\n  var removeTransitionDuration = function removeTransitionDuration() {\n    _this9.popper.style[prefix('transitionDuration')] = '';\n  };\n\n  var updatePosition = function updatePosition() {\n    if (_this9.popperInstance) {\n      _this9.popperInstance.update();\n    }\n\n    applyTransitionDuration$$1();\n\n    if (_this9.state.visible) {\n      requestAnimationFrame(updatePosition);\n    } else {\n      removeTransitionDuration();\n    }\n  };\n\n  updatePosition();\n}\n\n/**\n * Adds a mutation observer to an element and stores it in the instance\n * @param {Object}\n * @memberof Tippy\n * @private\n */\nfunction _addMutationObserver(_ref2) {\n  var target = _ref2.target,\n      callback = _ref2.callback,\n      options = _ref2.options;\n\n  if (!window.MutationObserver) return;\n\n  var observer = new MutationObserver(callback);\n  observer.observe(target, options);\n\n  this._(key).mutationObservers.push(observer);\n}\n\n/**\n * Fires the callback functions once the CSS transition ends for `show` and `hide` methods\n * @param {Number} duration\n * @param {Function} callback - callback function to fire once transition completes\n * @memberof Tippy\n * @private\n */\nfunction _onTransitionEnd(duration, callback) {\n  // Make callback synchronous if duration is 0\n  if (!duration) {\n    return callback();\n  }\n\n  var _getInnerElements6 = getInnerElements(this.popper),\n      tooltip = _getInnerElements6.tooltip;\n\n  var toggleListeners = function toggleListeners(action, listener) {\n    if (!listener) return;\n    tooltip[action + 'EventListener']('ontransitionend' in window ? 'transitionend' : 'webkitTransitionEnd', listener);\n  };\n\n  var listener = function listener(e) {\n    if (e.target === tooltip) {\n      toggleListeners('remove', listener);\n      callback();\n    }\n  };\n\n  toggleListeners('remove', this._(key).transitionendListener);\n  toggleListeners('add', listener);\n\n  this._(key).transitionendListener = listener;\n}\n\nvar idCounter = 1;\n\n/**\n * Creates tooltips for each reference element\n * @param {Element[]} els\n * @param {Object} config\n * @return {Tippy[]} Array of Tippy instances\n */\nfunction createTooltips(els, config) {\n  return els.reduce(function (acc, reference) {\n    var id = idCounter;\n\n    var options = evaluateOptions(reference, config.performance ? config : getIndividualOptions(reference, config));\n\n    var title = reference.getAttribute('title');\n\n    // Don't create an instance when:\n    // * the `title` attribute is falsy (null or empty string), and\n    // * it's not a delegate for tooltips, and\n    // * there is no html template specified, and\n    // * `dynamicTitle` option is false\n    if (!title && !options.target && !options.html && !options.dynamicTitle) {\n      return acc;\n    }\n\n    // Delegates should be highlighted as different\n    reference.setAttribute(options.target ? 'data-tippy-delegate' : 'data-tippy', '');\n\n    removeTitle(reference);\n\n    var popper = createPopperElement(id, title, options);\n\n    var tippy = new Tippy({\n      id: id,\n      reference: reference,\n      popper: popper,\n      options: options,\n      title: title,\n      popperInstance: null\n    });\n\n    if (options.createPopperInstanceOnInit) {\n      tippy.popperInstance = _createPopperInstance.call(tippy);\n      tippy.popperInstance.disableEventListeners();\n    }\n\n    var listeners = _getEventListeners.call(tippy);\n    tippy.listeners = options.trigger.trim().split(' ').reduce(function (acc, eventType) {\n      return acc.concat(createTrigger(eventType, reference, listeners, options));\n    }, []);\n\n    // Update tooltip content whenever the title attribute on the reference changes\n    if (options.dynamicTitle) {\n      _addMutationObserver.call(tippy, {\n        target: reference,\n        callback: function callback() {\n          var _getInnerElements = getInnerElements(popper),\n              content = _getInnerElements.content;\n\n          var title = reference.getAttribute('title');\n          if (title) {\n            content[options.allowTitleHTML ? 'innerHTML' : 'textContent'] = tippy.title = title;\n            removeTitle(reference);\n          }\n        },\n\n        options: {\n          attributes: true\n        }\n      });\n    }\n\n    // Shortcuts\n    reference._tippy = tippy;\n    popper._tippy = tippy;\n    popper._reference = reference;\n\n    acc.push(tippy);\n\n    idCounter++;\n\n    return acc;\n  }, []);\n}\n\n/**\n * Hides all poppers\n * @param {Tippy} excludeTippy - tippy to exclude if needed\n */\nfunction hideAllPoppers(excludeTippy) {\n  var poppers = toArray(document.querySelectorAll(selectors.POPPER));\n\n  poppers.forEach(function (popper) {\n    var tippy = popper._tippy;\n    if (!tippy) return;\n\n    var options = tippy.options;\n\n\n    if ((options.hideOnClick === true || options.trigger.indexOf('focus') > -1) && (!excludeTippy || popper !== excludeTippy.popper)) {\n      tippy.hide();\n    }\n  });\n}\n\n/**\n * Adds the needed event listeners\n */\nfunction bindEventListeners() {\n  var onDocumentTouch = function onDocumentTouch() {\n    if (browser.usingTouch) return;\n\n    browser.usingTouch = true;\n\n    if (browser.iOS) {\n      document.body.classList.add('tippy-touch');\n    }\n\n    if (browser.dynamicInputDetection && window.performance) {\n      document.addEventListener('mousemove', onDocumentMouseMove);\n    }\n\n    browser.onUserInputChange('touch');\n  };\n\n  var onDocumentMouseMove = function () {\n    var time = void 0;\n\n    return function () {\n      var now = performance.now();\n\n      // Chrome 60+ is 1 mousemove per animation frame, use 20ms time difference\n      if (now - time < 20) {\n        browser.usingTouch = false;\n        document.removeEventListener('mousemove', onDocumentMouseMove);\n        if (!browser.iOS) {\n          document.body.classList.remove('tippy-touch');\n        }\n        browser.onUserInputChange('mouse');\n      }\n\n      time = now;\n    };\n  }();\n\n  var onDocumentClick = function onDocumentClick(event) {\n    // Simulated events dispatched on the document\n    if (!(event.target instanceof Element)) {\n      return hideAllPoppers();\n    }\n\n    var reference = closest(event.target, selectors.REFERENCE);\n    var popper = closest(event.target, selectors.POPPER);\n\n    if (popper && popper._tippy && popper._tippy.options.interactive) {\n      return;\n    }\n\n    if (reference && reference._tippy) {\n      var options = reference._tippy.options;\n\n      var isClickTrigger = options.trigger.indexOf('click') > -1;\n      var isMultiple = options.multiple;\n\n      // Hide all poppers except the one belonging to the element that was clicked\n      if (!isMultiple && browser.usingTouch || !isMultiple && isClickTrigger) {\n        return hideAllPoppers(reference._tippy);\n      }\n\n      if (options.hideOnClick !== true || isClickTrigger) {\n        return;\n      }\n    }\n\n    hideAllPoppers();\n  };\n\n  var onWindowBlur = function onWindowBlur() {\n    var _document = document,\n        el = _document.activeElement;\n\n    if (el && el.blur && matches$1.call(el, selectors.REFERENCE)) {\n      el.blur();\n    }\n  };\n\n  var onWindowResize = function onWindowResize() {\n    toArray(document.querySelectorAll(selectors.POPPER)).forEach(function (popper) {\n      var tippyInstance = popper._tippy;\n      if (tippyInstance && !tippyInstance.options.livePlacement) {\n        tippyInstance.popperInstance.scheduleUpdate();\n      }\n    });\n  };\n\n  document.addEventListener('click', onDocumentClick);\n  document.addEventListener('touchstart', onDocumentTouch);\n  window.addEventListener('blur', onWindowBlur);\n  window.addEventListener('resize', onWindowResize);\n\n  if (!browser.supportsTouch && (navigator.maxTouchPoints || navigator.msMaxTouchPoints)) {\n    document.addEventListener('pointerdown', onDocumentTouch);\n  }\n}\n\nvar eventListenersBound = false;\n\n/**\n * Exported module\n * @param {String|Element|Element[]|NodeList|Object} selector\n * @param {Object} options\n * @param {Boolean} one - create one tooltip\n * @return {Object}\n */\nfunction tippy(selector, options, one) {\n  if (browser.supported && !eventListenersBound) {\n    bindEventListeners();\n    eventListenersBound = true;\n  }\n\n  if (isObjectLiteral(selector)) {\n    polyfillVirtualReferenceProps(selector);\n  }\n\n  options = _extends({}, defaults, options);\n\n  var references = getArrayOfElements(selector);\n  var firstReference = references[0];\n\n  return {\n    selector: selector,\n    options: options,\n    tooltips: browser.supported ? createTooltips(one && firstReference ? [firstReference] : references, options) : [],\n    destroyAll: function destroyAll() {\n      this.tooltips.forEach(function (tooltip) {\n        return tooltip.destroy();\n      });\n      this.tooltips = [];\n    }\n  };\n}\n\ntippy.version = version;\ntippy.browser = browser;\ntippy.defaults = defaults;\ntippy.one = function (selector, options) {\n  return tippy(selector, options, true).tooltips[0];\n};\ntippy.disableAnimations = function () {\n  defaults.updateDuration = defaults.duration = 0;\n  defaults.animateFill = false;\n};\n\n/**\n * Injects CSS styles to document head\n * @param {String} css\n */\nfunction injectCSS() {\n  var css = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (isBrowser && browser.supported) {\n    var head = document.head || document.querySelector('head');\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    head.insertBefore(style, head.firstChild);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n  }\n}\n\ninjectCSS(styles);\n\nreturn tippy;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 0)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ })
/******/ ]);